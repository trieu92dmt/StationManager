@model ProfileViewModel
@{
    ViewBag.Title = Model.ProfileName;
    string CurrentArea = ConstArea.Customer;
    string CurrentController = ConstController.Profile;
    string BackCurrentController = string.Format("{0}?Type={1}", ConstController.Profile, Model.ProfileTypeCode);

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);

    string generalActive = string.Empty;
    if (Model.ProfileTypeCode != ConstProfileType.Account && Model.ProfileTypeCode != ConstProfileType.Opportunity)
    {
        generalActive = "active";
    }
}

<input type="hidden" name="isContinue" id="isContinue" value="@ViewBag.isContinue" />
<input type="hidden" name="Data" id="Data" value="@ViewBag.Data" />

<div class="content-header clearfix">
    <h1 class="pull-left">
        @Model.ProfileName
        @HtmlExtensions.BackButton(CurrentArea, BackCurrentController, "&ModeSearch=Recently")
    </h1>
    <div class="pull-right">
        @HtmlExtensions.SaveButton("btn-save", LanguageResource.Btn_Save)
        @HtmlExtensions.SaveButton("btn-save-continue", LanguageResource.Btn_SaveAndContinueEdit)
    </div>
</div>

<div class="content">
    <div class="panel-group">
        <div class="panel panel-default">
            <div id="exTab1" class="nav-tabs-custom">
                <ul class="nav nav-pills nav nav-tabs">
                    @if (Model.ProfileTypeCode == ConstProfileType.Account || Model.ProfileTypeCode == ConstProfileType.Opportunity)
                    {
                        <li class="active">
                            <a href="#overview" data-toggle="tab">@LanguageResource.TabOverview</a>
                        </li>
                    }
                    <li class="@generalActive">
                        <a href="#tab-thong-tin" data-toggle="tab">@LanguageResource.GeneralInformation</a>
                    </li>
                    @if (Model.ProfileTypeCode == ConstProfileType.Account)
                    {
                        <li>
                            <a href="#tab-lien-he" data-toggle="tab">@LanguageResource.Profile_Contact</a>
                        </li>
                    }
                    @if (Model.ProfileTypeCode == ConstProfileType.Account)
                    {
                        <li>
                            <a href="#tab-ghe-tham" data-toggle="tab">@LanguageResource.Task_Activities_ShortName</a>
                        </li>
                        <li>
                            <a href="#tab-dich-vu" data-toggle="tab">
                                @if (CurrentUser.CompanyCode == ConstCompanyCode.Malloca || CurrentUser.CompanyCode == ConstCompanyCode.Aconcept)
                                {
                                    <span>@LanguageResource.Task_Ticket_ShortName</span>
                                }
                                else
                                {
                                    <span>@LanguageResource.HandleComplaints</span>
                                }
                            </a>
                        </li>
                        <li>
                            <a href="#tab-goc-tb" data-toggle="tab">@LanguageResource.Showroom_GTB</a>
                        </li>
                        <li>
                            <a href="#tab-dia-chi" data-toggle="tab">@LanguageResource.AddressBook</a>
                        </li>
                        <li>
                            <a href="#tab-phu-trach" data-toggle="tab">@LanguageResource.TabInCharge</a>
                        </li>
                    }
                    @if (Model.ProfileTypeCode == ConstProfileType.Opportunity)
                    {
                        <li>
                            <a href="#tab-chu-dau-tu" data-toggle="tab">@LanguageResource.TabInvestor</a>
                        </li>
                        <li>
                            <a href="#tab-thiet-ke" data-toggle="tab">@LanguageResource.TabConsultingDesign</a>
                        </li>
                        <li>
                            <a href="#tab-tong-thau" data-toggle="tab">@LanguageResource.TabGeneralContractor</a>
                        </li>
                        <li>
                            <a href="#tab-thi-cong" data-toggle="tab">@LanguageResource.TabConstruction</a>
                        </li>
                        <li>
                            <a href="#tab-hoat-dong" data-toggle="tab">@LanguageResource.TabActivities</a>
                        </li>
                    }
                    <li>
                        <a href="#tab-tai-lieu" data-toggle="tab">@LanguageResource.Customer_FileAttachment</a>
                    </li>
                    @if (Model.ProfileTypeCode == ConstProfileType.Account)
                    {
                        <li>
                            <a href="#tab-catalogue" data-toggle="tab">@LanguageResource.Catalogue</a>
                        </li>
                        <li>
                            <a href="#tab-thi-hieu" data-toggle="tab">@LanguageResource.CustomerTaste</a>
                        </li>

                        if (!string.IsNullOrEmpty(Model.ProfileForeignCode))
                        {
                            <li>
                                <a href="#tab-don-hang" data-toggle="tab">@LanguageResource.CustomerSaleOrder</a>
                            </li>
                        }

                        <li>
                            <a href="#tab-revenue" data-toggle="tab">@LanguageResource.Revenue</a>
                        </li>
                    }
                    <li>
                        <a href="#tab-thay-doi" data-toggle="tab">@LanguageResource.ChangeDataLog</a>
                    </li>
                </ul>

                <div class="tab-content clearfix">
                    @if (Model.ProfileTypeCode == ConstProfileType.Account || Model.ProfileTypeCode == ConstProfileType.Opportunity)
                    {
                        <div class="tab-pane active" id="overview">
                            @Html.Action("_Index", "Overview", Model.ProfileId)
                        </div>
                    }
                    <div class="tab-pane @generalActive" id="tab-thong-tin">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmEdit" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)

                            @Html.Hidden("Type", (string)ViewBag.Type)
                            @Html.Partial("_EditForm")
                            @Html.Action("_LogChange", "Shared", new { Model.CreateBy, Model.CreateTime, Model.LastEditBy, Model.LastEditTime, area = "" })
                        }
                    </div>
                    <div class="tab-pane" id="tab-lien-he">
                        @Html.Action("_List", "ProfileContact", Model.CompanyId)
                    </div>
                    @if (Model.ProfileTypeCode == ConstProfileType.Account)
                    {
                        <div class="tab-pane" id="tab-ghe-tham">
                            @Html.Action("_List", "Appointment", Model.ProfileId)

                            @Html.Action("_List", "Task", new { area = "Work", ProfileId = Model.ProfileId, Type = ConstWorkFlowCategory.THKH })

                            @Html.Action("_List", "Task", new { area = "Work", ProfileId = Model.ProfileId, Type = ConstWorkFlowCategory.ACTIVITIES })
                        </div>
                        <div class="tab-pane" id="tab-dich-vu">
                            @Html.Action("_List", "Task", new { area = "Work", ProfileId = Model.ProfileId, Type = ConstWorkFlowCategory.TICKET })

                            @Html.Action("_List", "Task", new { area = "Work", ProfileId = Model.ProfileId, Type = ConstWorkFlowCategory.TICKET_MLC })
                        </div>

                        <div class="tab-pane" id="tab-goc-tb">
                            @Html.Action("_List", "Task", new { area = "Work", ProfileId = Model.ProfileId, Type = ConstWorkFlowCategory.GTB })

                            @Html.Action("_List", "Task", new { area = "Work", ProfileId = Model.ProfileId, Type = ConstWorkFlowCategory.THKH })
                        </div>
                        <div class="tab-pane" id="tab-dia-chi">
                            @Html.Action("_List", "AddressBook", Model.ProfileId)
                        </div>
                        <div class="tab-pane" id="tab-phu-trach">
                            @Html.Action("_List", "PersonInCharge", Model.ProfileId)
                        </div>
                    }
                    @if (Model.ProfileTypeCode == ConstProfileType.Opportunity)
                    {
                        <div class="tab-pane" id="tab-chu-dau-tu">
                            @Html.Action("_List", "Investor", Model.ProfileId)
                        </div>

                        <div class="tab-pane" id="tab-thiet-ke">
                            @Html.Action("_List", "ConsultingDesign", Model.ProfileId)
                        </div>

                        <div class="tab-pane" id="tab-tong-thau">
                            @Html.Action("_List", "GeneralContractor", Model.ProfileId)
                        </div>

                        <div class="tab-pane" id="tab-thi-cong">
                            @Html.Action("_ListInternal", "Construction", Model.ProfileId)
                            @Html.Action("_ListCompetitor", "Construction", Model.ProfileId)
                        </div>

                        <div class="tab-pane" id="tab-hoat-dong">
                            @Html.Action("_List", "Activities", Model.ProfileId)
                        </div>
                    }
                    <div class="tab-pane" id="tab-tai-lieu">
                        @Html.Action("_List", "FileAttachment", Model.ProfileId)
                    </div>
                    <div class="tab-pane" id="tab-catalogue">
                        @Html.Action("_ListCatalog", "Catalogue", new { ProfileId = Model.ProfileId })
                    </div>
                    <div class="tab-pane" id="tab-thi-hieu">
                        @Html.Action("_List", "CustomerTaste", Model.ProfileId)
                    </div>
                    @if (!string.IsNullOrEmpty(Model.ProfileForeignCode))
                    {
                        <div class="tab-pane" id="tab-don-hang">
                            @Html.Action("_List", "CustomerSaleOrder")
                        </div>
                    }
                    @if (ViewBag.isViewRevenue == true)
                    {
                        <div class="tab-pane" id="tab-revenue">
                            @Html.Action("_ProfileRevenue", "Revenue", Model.ProfileId)
                        </div>
                    }
                    else
                    {
                        <div class="tab-pane" id="tab-revenue">
                            <div class="text-center">
                                @LanguageResource.Revenue_NotPermission
                            </div>
                        </div>
                    }
                    <div class="tab-pane" id="tab-thay-doi">
                        @Html.Action("_List", "ChangeDataLog", new { area = "Utilities", id = Model.ProfileId })
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>
<div class="loading-modal"></div>
@section components{
    <div>
        @if (ViewBag.Type != ConstProfileType.Account)
        {
            @Html.Action("_ProfileSearch", new ProfileSearchViewModel() { hasNoContact = true })
        }
    </div>

    <div class="modal fade" id="popupProfile" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
            </div>
        </div>
    </div>
    <div class="divProductPopup"></div>
    <!-- Chủ đầu tư -->
    <div id="divInvestorPopup"></div>
    <!-- Tư vấn-Thiết kế -->
    <div id="divDesignPopup"></div>
    <!-- Tổng thầu -->
    <div id="divContractorPopup"></div>
    <!-- Thi công -->
    <div id="divConstructionPopup"></div>
    <!-- Thông tin liên hệ-->
    @Html.Partial("_ContactInformation")
}

@section scripts {
    <script>
        var CurrentUrl = "@CurrentUrl";
        var Profile_NameBussiness = "@LanguageResource.Profile_NameBussiness";
        var Profile_NameCustomer = "@LanguageResource.Profile_NameCustomer";
        var EmailBusiness_Hint = "@Html.Raw(LanguageResource.EmailBusiness_Hint)";
        var PhoneBusiness_Hint = "@Html.Raw(LanguageResource.PhoneBusiness_Hint)";

        //set event btn-save, btn-save-continue for btn-create
        $(document).ready(function () {

            ISD.EditInitial(CurrentUrl);
            //Reset dropdownlist after reset form
            $('#frmEdit').on('reset', function (e) {
                setTimeout(function () {
                    $("#select2-CompanyId-container").text($("#CompanyId").find(':selected').text());
                })
            });
            $("input[name='IsAnCuongAccessory']").trigger("change");
            $("input[name='isForeignCustomer']").trigger("change");
            CustomerTypeCodeChangeInitial();
            ISD.Delete();
            GetCustomerSaleOrder();
            $(document).on("click", "#btn-save-fake", function () {
                $("#btn-save").click();
                $(this).button("reset");
            });
            $(document).on("click", "#btn-save-edit-fake", function () {
                $("#btn-save-continue").click();
                $(this).button("reset");
            });
            IsCreateRequestChange();
            
        });

        $(document).on("change", "#isCreateRequest", function () {
            IsCreateRequestChange();
        });
        function IsCreateRequestChange() {
            var isCreateRequest = $('#isCreateRequest').val();
            if (isCreateRequest != 'True') {
                $('.ecc-field').hide();
            }
            else {
                if ($('#PartnerFunctionCode').val() == null || $('#PartnerFunctionCode').val() == undefined || $('#PartnerFunctionCode').val() == "") {
                    $('#PartnerFunctionCode').val("PartnerFunction_0").change();
                }
                if ($('#PaymentTermCode').val() == null || $('#PaymentTermCode').val() == undefined || $('#PaymentTermCode').val() == "") {
                    $('#PaymentTermCode').val("1001").change();
                }
                if ($('#PaymentMethodCode').val() == null || $('#PaymentMethodCode').val() == undefined || $('#PaymentMethodCode').val() == "") {
                    $('#PaymentMethodCode').val("PaymentMethod_A").change();
                }
                if ($('#CustomerAccountAssignmentGroupCode').val() == null || $('#CustomerAccountAssignmentGroupCode').val() == undefined || $('#CustomerAccountAssignmentGroupCode').val() == "") {
                    $('#CustomerAccountAssignmentGroupCode').val("Z1").change();
                }
                if ($('#ReconcileAccountCode').val() == null || $('#ReconcileAccountCode').val() == undefined || $('#ReconcileAccountCode').val() == "") {
                    $('#ReconcileAccountCode').val("1311000100").change();
                }
                if ($('#TaxClassificationCode').val() == null || $('#TaxClassificationCode').val() == undefined || $('#TaxClassificationCode').val() == "") {
                    $('#TaxClassificationCode').val("TaxClassification_1").change();
                }
                if ($('#CurrencyCode').val() == null || $('#CurrencyCode').val() == undefined || $('#CurrencyCode').val() == "") {
                    $('#CurrencyCode').val("VND").change();
                }
                $('.ecc-field').show();
            }
        }

        $(document).on("change", "input[name='CustomerTypeCode']", function myfunction() {
            CustomerTypeCodeChangeInitial();
        });

        $(document).on('shown.bs.modal', '#divProfileSearch', function (e) {
            var btn = e.relatedTarget;
            var field = $(btn).data('field');
            if (!field) {
                field = "";
            }
            $("#divProfileSearch #ProfileField").val(field);

            var fieldRow = $(btn).data('row');
            $("#divProfileSearch #ProfileFieldRow").val(fieldRow);
        })

    </script>
    @Scripts.Render("~/areas/customer/scripts/js")
}
