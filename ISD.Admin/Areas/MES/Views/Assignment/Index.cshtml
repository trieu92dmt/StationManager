@model AssignmentViewModel
@using ISD.Extensions
@{
    ViewBag.Title = LanguageResource.Assignment_Department;
    string CurrentArea = ConstArea.MES;
    string CurrentController = ConstController.Assignment;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    //bool isHasPermissionCreate = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Create);
}

@section head {
}

<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @*@HtmlExtensions.CreateButton(CurrentArea, CurrentController, parameters)*@
        <a class="btn btn-primary btn-inline" id="btn-save"><i class="fa fa-floppy-o" aria-hidden="true"></i> Lưu</a>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "frmAssignment", @class = "isd-form-search" }))
            {
                <!--Form filter-->
                <div class="panel panel-default panel-search">

                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.WorkShopId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(p => p.WorkShopId, null, null, new { @class = "form-control with-search" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.DepartmentId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(p => p.DepartmentId, null, LanguageResource.Dropdownlist_Choose, new { @class = "form-control with-search" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.WorkingDate)
                                    </div>
                                    <div class="col-md-4">
                                        @Html.RequiredTextboxFor(p => p.WorkingDate, "{0:yyyy-MM-dd}", new { type = "date", @Value = DateTime.Now.ToString("yyyy-MM-dd") })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">@LanguageResource.Assignment_Time</label>
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        @Html.TooltipLabelFor(p => p.FromTime)
                                    </div>
                                    <div class="col-md-2">
                                        @Html.RequiredTextboxFor(p => p.FromTime, new { type = "time" })
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TooltipLabelFor(p => p.ToTime)
                                    </div>
                                    <div class="col-md-2">
                                        @Html.RequiredTextboxFor(p => p.ToTime, new { type = "time" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*<div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-5">
                                        <a class="btn btn-primary btn-inline" id="btn-search-form"><i class="fa fa-eye" aria-hidden="true"></i> Xem</a>
                                    </div>
                                </div>
                            </div>*@
                    </div>

                </div>

                <!--Form list-->
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="divBody">
                            <!--Lệnh sản xuất-->
                            <div class="box box-info">
                                <div class="box-header with-border">
                                    <h5 class="box-title">@LanguageResource.Assignment_Summary</h5>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="box-body">
                                    <div class="row">
                                        <div class="form-group">
                                            <div class="pull-right">
                                                <a class="btn bg-blue mr-20" id="btn-create-lsx"><i class="fa fa-plus-square"></i> Thêm mới</a>
                                            </div>

                                        </div>
                                    </div>
                                    @Html.Action("_LenhSanXuat", "Assignment", new { area = CurrentArea })
                                </div>

                            </div>

                            <!--Nhân viên-->
                            @*<div class="box box-info">
                                    <div class="box-header with-border box-primary">
                                        <div class="box-tools pull-right">
                                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        <h5 class="box-title">@LanguageResource.Assignment_Employee</h5>
                                    </div>
                                    <div class="box-body">
                                        <div class="row">
                                            <div class="pull-right">
                                                <a class="btn btn-primary btn-inline" data-toggle="modal" data-target="#modal-add-employee"><i class="fa fa-plus-square" aria-hidden="true"></i> Thêm NV</a>
                                            </div>
                                        </div>
                                        @Html.Action("_NhanVien", "Assignment", new { area = CurrentArea })

                                    </div>

                                </div>*@

                            <!--Công đoạn thực hiện-->
                            <div class="box box-info">
                                <div class="box-header with-border">
                                    <h5 class="box-title">@LanguageResource.Assignment_Routing</h5>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="box-body">
                                    <div class="row">
                                        <div class="form-group">
                                            <div class="pull-right">
                                                <a class="btn bg-blue mr-20" id="btn-create-cong-doan"><i class="fa fa-plus-square"></i> Thêm mới</a>
                                            </div>

                                        </div>
                                    </div>
                                    @Html.Partial("_CongDoan", new List<AssignmentCongDoanViewModel>())
                                </div>
                            </div>


                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<div class="delete-confirm"></div>

@section components {
    <!--THÊM NHÂN VIÊN-->
    <div class="modal fade" id="modal-add-employee" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">
                        Thêm nhân viên
                    </h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("_AddEmployee", new EmployeeAssignmentSearchViewModel())
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btn-save-add-employee">Lưu</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                </div>
            </div>
        </div>
    </div>
}

@section jquery {
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Content/jquery-ui.js"></script>
}

@section scripts {
    <script>
        //load default and set event
        $(document).ready(function () {
            //load tổ theo phân xưởng
            var WorkShopId = $('#WorkShopId').val();
            getDeparmentListBy('#DepartmentId', WorkShopId);

            var AssignmentWorkShopId = $('#AssignmentWorkShopId').val();
            getDeparmentListBy('#AssignmentDepartmentId', AssignmentWorkShopId);

            numericInput();

            ISD.ShowMessage(window.location.href);
        });

        function numericInput() {
            $('.so-luong-phan-cong').inputFilter(function (value) {
                return /^-?\d*$/.test(value);
            });
        }

        $(document).on('change', '#WorkShopId', function () {
            var WorkShopId = $(this).val();
            var element = $('#DepartmentId');
            getDeparmentListBy(element, WorkShopId);
        });

        $(document).on('change', '#AssignmentWorkShopId', function () {
            var WorkShopId = $(this).val();
            var element = $('#AssignmentDepartmentId');
            getDeparmentListBy(element, WorkShopId);
        });

        $(document).on('hide.bs.modal', "#modal-add-employee", function (e) {
            $('#tbl-search-employee tbody').html('<tr><td colspan="6" class="text-center">Không tìm thấy dòng nào phù hợp</td></tr>');
        });

        $(document).on('change', '.cong-doan-phan-xuong', function () {
            var row = $(this).data('row');
            var workShopId = $(this).val();
            var departmentElement = $('#CongDoanList_DepartmentId_' + row);
            getDeparmentListBy(departmentElement, workShopId);
            $('#CongDoanList_EmployeeCode_' + row).html('');
            $('#CongDoanList_StepName_' + row).html('');
        });

        $(document).on('change', '.cong-doan-to', function () {
            var row = $(this).data('row');
            $('#CongDoanList_EmployeeCode_' + row).html('');
            $('#CongDoanList_StepName_' + row).html('');
            var departmentId = $(this).val();
            //nhân viên
            var employeeElement = $('#CongDoanList_EmployeeCode_' + row);
            getEmployeeListBy(employeeElement, departmentId);
            //công đoạn
            var routingElement = $('#CongDoanList_RoutingId_' + row);
            getRoutingListBy(routingElement, departmentId);
        });

        $(document).on('change', '.cong-doan-thuc-hien', function () {
            var row = $(this).data('row');
            var name = $(this).find(":selected").data('name');
            $('#CongDoanList_StepName_' + row).html(name);
            $('input[name="CongDoanList[' + row + '].StepName"]').val(name);
        });

        //lấy danh sách tổ theo phân xưởng
        function getDeparmentListBy(element, WorkShopId) {
            $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/GetDepartmentBy',
                data: {
                    WorkShopId: WorkShopId
                },
                success: function (jsonData) {
                    var $department = $(element);
                    $department.html("");
                    /*$department.append("<option value=''>-- Vui lòng chọn --</option>");*/
                    $.each(jsonData.Data, function (index, value) {
                        $department.append("<option value='" + value.id + "'>" + value.name + "</option>");
                    });
                    $department.trigger('change');
                }
            });
        }

         //lấy danh sách nhân viên theo tổ
        function getEmployeeListBy(element, DepartmentId) {
            $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/GetEmployeeBy',
                data: {
                    DepartmentId: DepartmentId
                },
                success: function (jsonData) {
                    var $department = $(element);
                    $department.html("");
                    /*$department.append("<option value=''>-- Vui lòng chọn --</option>");*/
                    $.each(jsonData.Data, function (index, value) {
                        $department.append("<option value='" + value.id + "'>" + value.name + "</option>");
                    });
                }
            });
        }

        //lấy danh sách công đoạn theo tổ
         function getRoutingListBy(element, DepartmentId) {
            $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/GetRoutingBy',
                data: {
                    DepartmentId: DepartmentId
                },
                success: function (jsonData) {
                    var $routing = $(element);
                    $routing.html("");
                    /*$department.append("<option value=''>-- Vui lòng chọn --</option>");*/
                    $.each(jsonData.Data, function (index, value) {
                        $routing.append("<option value='" + value.StepId + "' data-name='" + value.StepName + "' >" + value.StepCode + "</option>");
                    });
                    $routing.trigger('change');
                }
            });
        }

        //xử lý nút "Xem"
        $(document).ajaxStop(function () {
            $('#btn-search-form').button('reset');
        });

        $(document).on('click', '#btn-search-form', function () {
            var $btn = $(this);
            $btn.button('loading');
            getLenhSanXuatList();
            getNhanVienList();
            getCongDoanList();
        });

        function getLenhSanXuatList() {
            var data = $('#frmSearch').serialize();
            $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/_LenhSanXuat',
                data: data,
                success: function (html) {
                    $('#tbl-lenh-san-xuat').html(html);
                    numericInput();
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                }
            });
        }

        function getNhanVienList() {
            var data = $('#frmSearch').serialize();
            $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/_NhanVien',
                data: data,
                success: function (html) {
                    $('#tbl-nhan-vien').html(html);
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                }
            });
        }

        //xử lý check box chọn nv chính
        $(document).on('click', '.nv-main', function () {
            $('.nv-main').not(this).prop('checked', false);
        });

        //xử lý nút tìm kiếm ở popup thêm nhân viên
        $(document).on('click', '#btn-employee-search', function () {
            var data = $('#frmEmployeeAssignmentSearch').serialize();
             $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/_SearchEmployee',
                data: data,
                success: function (html) {
                    $('#tbl-search-employee').html(html);
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                }
            });
        });

        //xử lý nút lưu khi thêm nhân viên
        $(document).on('click', '#btn-save-add-employee', function () {
            //NVList
            var NVList = new Array();
            $('.nhan-vien').each(function () {
                NVList.push($(this).val());
            });
            //AddEmployeeList
            var AddEmployeeList = new Array();
            $('.them-nhan-vien:checked').each(function () {
                AddEmployeeList.push($(this).val());
            });
            let data = {
                NVList,
                AddEmployeeList
            }
            $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/_NhanVien',
                data: data,
                traditional: true,
                success: function (html) {
                    $('#tbl-nhan-vien').html(html);
                    getCongDoanList();
                    $('#modal-add-employee').modal('hide');
                },
                error: function (xhr, status, error) {
                    $('#modal-add-employee').modal('hide');
                    alertPopup(false, xhr.responseText);
                }
            });
        });

        //xử lý load công đoạn khi check vào lệnh sản xuất
        $(document).on('click', '.lenh-san-xuat', function () {
            getCongDoanList();
        });

        function getCongDoanList() {
             var LSXC = new Array();
            $('.lenh-san-xuat:checked').each(function () {
                LSXC.push($(this).val());
            });
            var DepartmentId = $('#DepartmentId').val();
            var NVList = new Array();
            $('.nhan-vien').each(function () {
                NVList.push($(this).val());
            });
            let data = {
                LSXC,
                DepartmentId,
                NVList,
            }
            $.ajax({
                type: 'POST',
                url: '/@CurrentUrl/_CongDoan',
                data: data,
                traditional: true,
                success: function (html) {
                    $('#tbl-cong-doan').html(html);
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                }
            });
        }

        //xử lý nút thêm mới lệnh sản xuất
        $(document).on('click', '#btn-create-lsx', function () {
            var $btn = $(this);
            $btn.button('loading');
            var data = $("#frmAssignment").serialize();
            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/_LenhSanXuatInner",
                data: data,
                success: function (data) {
                    $("#tbl-lenh-san-xuat tbody").html(data);
                    numericInput();
                    inputAutoComplete();
                    $btn.button('reset');
                },
                error: function (xhr, status, error) {
                     alertPopup(false, xhr.responseText);
                     $btn.button('reset');
                }
            });
        });

         //xử lý nút thêm mới công đoạn thực hiện
        $(document).on('click', '#btn-create-cong-doan', function () {
            var $btn = $(this);
            $btn.button('loading');
            var data = $("#frmAssignment").serialize();
            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/_CongDoanInner",
                data: data,
                success: function (data) {
                    $("#tbl-cong-doan tbody").html(data);
                    $btn.button('reset');
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                    $btn.button('reset');
                }
            });
        });

        //xử lý thông tin detail khi user thay đổi ngày làm việc
        $(document).on('input', '#WorkingDate', function () {
            $("#tbl-lenh-san-xuat tbody").html('<tr><td colspan="10" class="text-center">@LanguageResource.NoInsertRecord</td></tr>');
        });


        //autocomplete
        function inputAutoComplete() {
            //lệnh sản xuất đại trà
            $(".lsxdt").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/@CurrentUrl/SearchLSXDTByWorkingDate",
                        data: JSON.stringify({ "SearchText": request.term, "WorkingDate": $("#WorkingDate").val() }),
                        dataType: "json",
                        success: function (data) {
                            if (data.IsSuccess) {
                                response($.map(data.Data, function (item) {
                                    /* return { label: item.ProductName, id: item.ProductId, value: item.ProductCode, code: item.ProductName };*/
                                    return { label: item, value: item };
                                }));
                            }
                            else {
                                if (data.Message) {
                                    alertPopup(false, data.Message);
                                }
                            }

                            //response(data);
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                },
                autoFocus: true,
                //prevent another value except dropdown value
                //change: function (event, ui) {
                //    if (ui.item === null) {
                //        $("#ProductName").val("");
                //        $("#ProductId").val("");
                //        $("#Quantiny").val("");
                //        $("#ProductName").focus();
                //    }
                //},
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                }
            });
            //đợt sản xuất
            $(".lsxd").autocomplete({
                source: function (request, response) {
                    var row = this.element.attr('data-row');
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/@CurrentUrl/SearchLSXDByLSXDT",
                        data: JSON.stringify({ "SearchText": request.term, "LSXDT": $('input[name="LSXList[' + row + '].LSXDT"]').val() }),
                        dataType: "json",
                        success: function (data) {
                            if (data.IsSuccess) {
                                response($.map(data.Data, function (item) {
                                    return { label: item.name, value: item.name, id: item.id };
                                }));
                            }
                            else {
                                if (data.Message) {
                                    alertPopup(false, data.Message);
                                }
                            }

                            //response(data);
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                },
                autoFocus: true,
                //prevent another value except dropdown value
                //change: function (event, ui) {
                //    if (ui.item === null) {
                //        $("#ProductName").val("");
                //        $("#ProductId").val("");
                //        $("#Quantiny").val("");
                //        $("#ProductName").focus();
                //    }
                //},
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    $('input[name="LSXList[' + $(this).data('row') + '].ProductionOrderBatch"]').val(ui.item.id);
                }
            });
            //lệnh sản xuất SAP
            $(".lsxc").autocomplete({
                source: function (request, response) {
                    var row = this.element.attr('data-row');
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/@CurrentUrl/SearchLSXCByLSXD",
                        data: JSON.stringify({ "SearchText": request.term, "LSXD": $('input[name="LSXList[' + row + '].ProductionOrderBatch"]').val() }),
                        dataType: "json",
                        success: function (data) {
                            if (data.IsSuccess) {
                                response($.map(data.Data, function (item) {
                                    return { label: item.name, value: item.name, id: item.id };
                                }));
                            }
                            else {
                                if (data.Message) {
                                    alertPopup(false, data.Message);
                                }
                            }

                            //response(data);
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                },
                autoFocus: true,
                //prevent another value except dropdown value
                //change: function (event, ui) {
                //    if (ui.item === null) {
                //        $("#ProductName").val("");
                //        $("#ProductId").val("");
                //        $("#Quantiny").val("");
                //        $("#ProductName").focus();
                //    }
                //},
                select: function (event, ui) {
                    var row = $(this).data('row');
                    $(this).val(ui.item.value);
                    $('input[name="LSXList[' + row + '].ProductionOrder"]').val(ui.item.id);

                    //Load thông tin sản phẩm theo LSX SAP
                    getProductInformation(ui.item.id, row);
                }
            });
            //chi tiết
            $(".item-code").autocomplete({
                source: function (request, response) {
                    var row = this.element.attr('data-row');
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/@CurrentUrl/SearchItemByMaterialNumberAndPlant",
                        data: JSON.stringify({ "SearchText": request.term, "WERKS": $('input[name="LSXList[' + row + '].CompanyCode"]').val(), "MATNR": $('input[name="LSXList[' + row + '].ProductCode"]').val() }),
                        dataType: "json",
                        success: function (data) {
                            if (data.IsSuccess) {
                                response($.map(data.Data, function (item) {
                                    return { label: item.name, value: item.id, id: item.id, name: item.additional };
                                }));
                            }
                            else {
                                if (data.Message) {
                                    alertPopup(false, data.Message);
                                }
                            }

                            //response(data);
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                },
                autoFocus: true,
                //prevent another value except dropdown value
                //change: function (event, ui) {
                //    //if (ui.item === null) {

                //    //}
                //},
                select: function (event, ui) {
                    var row = $(this).data('row');
                    $(this).val(ui.item.id);
                    $('#LSXList_ItemName_' + row).html(ui.item.name);
                    $('input[name="LSXList[' + row + '].ItemName"]').val(ui.item.name);
                }
            });
        }

        function getProductInformation(ProductionOrder, row) {
              $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/@CurrentUrl/GetProductByLSXC",
                    data: JSON.stringify({ "LSXC": ProductionOrder }),
                    dataType: "json",
                    success: function (data) {
                        if (data.IsSuccess) {
                            $('input[name="LSXList[' + row + '].ProductId"]').val(data.Data.ProductId);
                            $('input[name="LSXList[' + row + '].ProductCode"]').val(data.Data.ProductCode);
                            $('input[name="LSXList[' + row + '].CompanyCode"]').val(data.Data.CompanyCode);
                            $('input[name="LSXList[' + row + '].ProductName"]').val(data.Data.ProductName);
                            $('#LSXList_ProductName_' + row).html(data.Data.ProductName);
                        }
                        else {
                            if (data.Message) {
                                alertPopup(false, data.Message);
                            }
                        }

                        //response(data);
                    },
                    error: function (xhr, status, error) {
                        alertPopup(false, xhr.responseText);
                    }
              });
        }

        //xử lý nút xóa dòng lsx
        $(document).on('click', '.btn-delete-lsx', function () {
            var data = $("#frmAssignment").serialize();
            var STT = $(this).data('stt');
            var $btn = $(this);
            $btn.button('loading');
            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/DeleteLSXC",
                data: data + "&DeleteSTT=" + STT,
                success: function (data) {
                    $("#tbl-lenh-san-xuat tbody").html(data);
                    numericInput();
                    inputAutoComplete();
                    $btn.button('reset');
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                    $btn.button('reset');
                }
            });
        });

          //xử lý nút xóa dòng công đoạn
        $(document).on('click', '.btn-delete-cong-doan', function () {
            var data = $("#frmAssignment").serialize();
            var STT = $(this).data('stt');
            var $btn = $(this);
            $btn.button('loading');
            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/DeleteRouting",
                data: data + "&DeleteSTT=" + STT,
                success: function (data) {
                    $("#tbl-cong-doan tbody").html(data);
                    $btn.button('reset');
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                    $btn.button('reset');
                }
            });
        });

        //xử lý input trong list
        $(document).on('input', '.item-code', function () {
            var row = $(this).data('row');
            $('#LSXList_ItemName_' + row).html('');
            $('input[name="LSXList[' + row + '].ItemName"]').val('');
            $('input[name="LSXList[' + row + '].Qty"]').val('');
        });
        $(document).on('input', '.lsxc', function () {
            var row = $(this).data('row');
            $('input[name="LSXList[' + row + '].CompanyCode"]').val('');
            $('input[name="LSXList[' + row + '].ProductId"]').val('');
            $('input[name="LSXList[' + row + '].ProductCode"]').val('');
            $('#LSXList_ProductName_' + row).html('');
            $('input[name="LSXList[' + row + '].ProductName"]').val('');
            $('input[name="LSXList[' + row + '].ItemCode"]').val('');
            $('#LSXList_ItemName_' + row).html('');
            $('input[name="LSXList[' + row + '].ItemName"]').val('');
            $('input[name="LSXList[' + row + '].Qty"]').val('');
        });
        $(document).on('input', '.lsxd', function () {
            var row = $(this).data('row');
            $('input[name="LSXList[' + row + '].LSXC"]').val('');
            $('input[name="LSXList[' + row + '].ProductionOrder"]').val('');
            $('input[name="LSXList[' + row + '].CompanyCode"]').val('');
            $('input[name="LSXList[' + row + '].ProductId"]').val('');
            $('input[name="LSXList[' + row + '].ProductCode"]').val('');
            $('#LSXList_ProductName_' + row).html('');
            $('input[name="LSXList[' + row + '].ProductName"]').val('');
            $('input[name="LSXList[' + row + '].ItemCode"]').val('');
            $('#LSXList_ItemName_' + row).html('');
            $('input[name="LSXList[' + row + '].ItemName"]').val('');
            $('input[name="LSXList[' + row + '].Qty"]').val('');
        });
        $(document).on('input', '.lsxdt', function () {
            var row = $(this).data('row');
            $('input[name="LSXList[' + row + '].LSXD"]').val('');
            $('input[name="LSXList[' + row + '].ProductionOrderBatch"]').val('');
            $('input[name="LSXList[' + row + '].LSXC"]').val('');
            $('input[name="LSXList[' + row + '].ProductionOrder"]').val('');
            $('input[name="LSXList[' + row + '].CompanyCode"]').val('');
            $('input[name="LSXList[' + row + '].ProductId"]').val('');
            $('input[name="LSXList[' + row + '].ProductCode"]').val('');
            $('#LSXList_ProductName_' + row).html('');
            $('input[name="LSXList[' + row + '].ProductName"]').val('');
            $('input[name="LSXList[' + row + '].ItemCode"]').val('');
            $('#LSXList_ItemName_' + row).html('');
            $('input[name="LSXList[' + row + '].ItemName"]').val('');
            $('input[name="LSXList[' + row + '].Qty"]').val('');
        });

        //Lưu thông tin phân công
        $(document).on('click', '#btn-save', function () {
             var data = $("#frmAssignment").serialize();
            var $btn = $(this);
            $btn.button('loading');
            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/SaveAssignment",
                data: data,
                success: function (jsonData) {
                    $btn.button('reset');
                    if (jsonData.IsSuccess) {
                        window.location.href = "/@CurrentUrl?message=" + jsonData.Message;
                    }
                    else {
                        alertPopup(false, jsonData.Data);
                    }
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                    $btn.button('reset');
                }
            });
        });
    </script>
}
