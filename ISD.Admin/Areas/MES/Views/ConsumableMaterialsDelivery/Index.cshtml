@model ConsumableMaterialsDeliveryViewModel
@{
    ViewBag.Title = LanguageResource.MES_ConsumableMaterialsDelivery;
    string CurrentArea = ConstArea.MES;
    string CurrentController = ConstController.ConsumableMaterialsDelivery;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    //bool isHasPermissionCreate = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Create);

    var dataAllotmentList = Model.dataAllotmentList;
}

@section head {
    <style>
        .dataAllotment:not(:first-child) {
            margin-top: 7px;
        }
    </style>
}

<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        <a class="btn btn-primary btn-inline" id="btn-confirm"> Xác nhận</a>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <!--Form input-->
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "frmAllot", @class = "isd-form-search" }))
                {
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.DocumentDate)
                                    </div>
                                    <div class="col-md-4">
                                        @Html.RequiredTextboxFor(p => p.DocumentDate, new { @type = "date", @Value = Model.DocumentDate.Value.ToString("yyyy-MM-dd") })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.StepCode)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(p => p.StepCode, null, null, new { @class = "form-control with-search", @disabled = "disabled" })
                                        @Html.Hidden("SelectedStepCode", ConstStep.TKP)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @*ConsumableMaterialsDelivery_DataAllotment*@
                                        <div class="label-wrapper">
                                            <label class="control-label" for="DataAllotment">Dữ liệu phân bổ</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="dataAllotmentControls">
                                            <div class="input-group dataAllotment">
                                                <div class="col-md-6">
                                                    @*@Html.DropDownListFor(p => dataAllotmentList[0].DataAllotment, (SelectList)ViewBag.DataAllotment, LanguageResource.Dropdownlist_Choose, new { @class = "form-control with-search data-allotment", @data_row = 0, })*@
                                                    <select id="dataAllotmentList_0__DataAllotment" name="dataAllotmentList[0].DataAllotment" class="form-control data-allotment" data-row="0">
                                                        <option value="">@LanguageResource.Dropdownlist_Choose</option>
                                                        @*@if ((SelectList)ViewBag.DataAllotment != null)
                                                        {
                                                            foreach (var mat in (SelectList)ViewBag.DataAllotment)
                                                            {
                                                                <option value="@mat.Value">@mat.Text</option>
                                                            }
                                                        }*@
                                                    </select>
                                                </div>
                                                <div class="col-md-6 input-group">
                                                    @Html.RequiredTextboxFor(p => dataAllotmentList[0].DataAllotmentQuantity, new { @class = "form-control data-allot-quantity" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-default btn-addDataAllotment" type="button">
                                                            <span class="glyphicon glyphicon-plus"></span>
                                                        </button>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-5">
                                    <a class="btn btn-primary btn-inline" id="btn-allot"> Phân bổ</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!--Result-->
            <div class="panel panel-default">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "frmAllotResult" }))
                {
                    <div class="panel-body">
                        <div id="divBody">
                            <!--Kết quả phân bổ-->
                            @*@Html.Action("_AllotResult", "ConsumableMaterialsDelivery", new { area = CurrentArea })*@
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        //load default and set event
        $(document).ready(function () {
            ISD.ShowMessage(window.location.href);
            ISD.SearchInitial("@CurrentUrl");
            Select2_CustomForList("/MES/ConsumableMaterialsDelivery/SearchDataAllotmentBy", ".data-allotment");
            numericInput();
        });

        function numericInput() {
            $('.data-allot-quantity').inputFilter(function (value) {
                return /^-?\d*$/.test(value);
            });
        }

        function Select2_CustomForList(url, selector) {
            $(selector).select2({
                ajax: {
                    url: url,
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            search: params.term, // search term
                            page: params.page,
                            /* type: $(this).data('code'),*/
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.value, text: obj.text };
                            })
                        };
                    }
                    , minimumInputLength: 1 // Tối thiếu 2 kí tự thì mới search

                }
            });
        }


        $(document).on('click', '.btn-addDataAllotment', function (e) {
            e.preventDefault();

            var indexRowDataAllotment = 0;

            $(".dataAllotment").each(function (index, value) {
                indexRowDataAllotment = index;
            });
            indexRowDataAllotment++;

            var controlForm = $('.dataAllotmentControls:first'),
                currentEntry = $(this).parents('.dataAllotment:last'),
                newEntry = $(currentEntry.clone()).appendTo(controlForm);

            newEntry.find('.data-allotment').attr('name', 'dataAllotmentList[' + indexRowDataAllotment + '].DataAllotment').val('');
            newEntry.find('.data-allotment').attr('id', 'dataAllotmentList_' + indexRowDataAllotment + '__DataAllotment').val('');
            newEntry.find('.data-allotment').data('row', indexRowDataAllotment);

            newEntry.find('.data-allot-quantity').attr('name', 'dataAllotmentList[' + indexRowDataAllotment + '].DataAllotmentQuantity').val('');
            newEntry.find('.data-allot-quantity').attr('id', 'dataAllotmentList_' + indexRowDataAllotment + '__DataAllotmentQuantity').val('');
            newEntry.find('.data-allot-quantity').data('row', indexRowDataAllotment);

            newEntry.find('.select2').remove();
            $("select").select2();

            controlForm.find('.dataAllotment:not(:first) .btn-addDataAllotment')
                .removeClass('btn-addDataAllotment').addClass('btn-removeDataAllotment')
                .removeClass('btn-success').addClass('btn-danger')
                .html('<span class="glyphicon glyphicon-minus"></span>');
        });

        $(document).on('click', '.btn-removeDataAllotment', function (e) {
            $(this).parents('.profileGroup:last').remove();

            $(".dataAllotment").each(function (index, value) {
                $(this).find('.data-allotment').attr("name", "dataAllotmentList[" + index + "].DataAllotment");
                $(this).find('.data-allotment').attr("id", "dataAllotmentList_" + index + "__DataAllotment");

                $(this).find('.data-allot-quantity').attr("name", "dataAllotmentList[" + index + "].DataAllotmentQuantity");
                $(this).find('.data-allot-quantity').attr("id", "dataAllotmentList_" + index + "__DataAllotmentQuantity");
            });
            e.preventDefault();
            return false;
        });

        //Xử lý nút phân bổ
        $(document).on('click', '#btn-allot', function () {
            var $btn = $(this);
            $btn.button('loading');
            var data = $('#frmAllot').serialize();
            $.ajax({
                type: "GET",
                url: "/@CurrentUrl" + "/_AllotResult",
                data: data,
                success: function (html) {
                    $btn.button('reset');
                    $("#divBody").html(html);
                },
                error: function (xhr, status, error) {
                    $btn.button('reset');
                    alertPopup(false, xhr.responseText);
                }
            });
        });

        //Xử lý nút xác nhận
        $(document).on('click', '#btn-confirm', function () {
            var $btn = $(this);
            $btn.button('loading');
            var frm = $('#frmAllotResult'),
                formData = new FormData(),
                formParams = frm.serializeArray();

            $.each(formParams, function (i, val) {
                formData.append(val.name, val.value);
            });
            //Ngày
            var DocumentDate = $('#DocumentDate').val();
            formData.append('DocumentDate', DocumentDate);

            $.ajax({
                type: "POST",
                url: "/@CurrentUrl" + "/Confirm",
                data: formData,
                processData: false,
                contentType: false,
                success: function (jsonData) {
                    $btn.button('reset');
                    if (jsonData.IsSuccess) {
                         window.location.href = "/@CurrentUrl" + "?message=" + jsonData.Message;
                    }
                    else {
                        alertPopup(false, jsonData.Message);
                    }

                },
                error: function (xhr, status, error) {
                    $btn.button('reset');
                    alertPopup(false, xhr.responseText);
                }
            });
        });
    </script>
}