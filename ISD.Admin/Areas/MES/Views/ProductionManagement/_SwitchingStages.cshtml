@using System.Globalization;
@model SwitchingStagesViewModel
<style>
    .pr-0 {
        padding-right: 0 !important;
    }

    .pt-2 {
        padding-top: 2px !important;
    }

    input.form-control.text-box.single-line {
        padding: 0 !important;
        text-align: center;
    }
</style>

<div class="modal-dialog modal-dialog-sm">
    <div class="modal-content">

        <div class="modal-header bg-primary">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h5 class="modal-title">Chuyển công đoạn</h5>
        </div>
        <div class="modal-body">

            <div id="divAlertWarningTask" class="alert alert-warning alert-dismissable divPopupMessage" style="display: none">
                <button type="button" class="alert-close close" aria-hidden="true" data-div="divAlertWarning">×</button>
                <div class="alert-message" id="logMsg">
                </div>
            </div>
            <form id="frm-switching-stages">
                @Html.HiddenFor(p => p.TaskId)
                @Html.HiddenFor(p => p.ProductionOrder)
                @Html.HiddenFor(p => p.ProductionOrder_SAP)
                @Html.HiddenFor(p => p.Summary)
                @Html.HiddenFor(p => p.ProductCode)
                @Html.HiddenFor(p => p.ProductId)
                @Html.HiddenFor(p => p.ProductAttributes)
                <div class="panel-group">
                    <div class="panel">
                        <div class="panel-body">
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <div class="col-md-4 col-xs-5 pr-0">
                                        @Html.LabelByPropertyNameFor(p => p.ProductionOrder, LanguageResource.Assignment_LSXDT + ":")
                                    </div>
                                    <div class="col-md-8 col-xs-7 display-for">
                                        @Html.DisplayFor(p => Model.ProductionOrder)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4 col-xs-5">
                                        @Html.LabelByPropertyNameFor(p => p.Summary, LanguageResource.Assignment_LSXD + ":")
                                    </div>
                                    <div class="col-md-8 col-xs-7 display-for">
                                        @Html.DisplayTextFor(p => Model.Summary)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4 col-xs-5 pr-0">
                                        @Html.LabelByPropertyNameFor(p => p.ProductionOrder_SAP, LanguageResource.Assignment_LSXC + ":")
                                    </div>
                                    <div class="col-md-8 col-xs-7 display-for">
                                        @Html.DisplayFor(p => Model.ProductionOrder_SAP)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4 col-xs-5 pr-0">
                                        @Html.LabelByPropertyNameFor(p => p.ProductName, "Sản phẩm:")
                                    </div>
                                    <div class="col-md-8 col-xs-7 display-for">
                                        (@Html.DisplayTextFor(p => Model.Qty)
                                        @Html.DisplayTextFor(p => Model.Unit))
                                        @Html.DisplayTextFor(p => Model.ProductCode) |
                                        @Html.DisplayTextFor(p => Model.ProductName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4 col-xs-5 pr-0">
                                        @Html.LabelByPropertyNameFor(p => p.ProductAttributes, "Chi tiết:")
                                    </div>
                                    <div class="col-md-8 col-xs-7 display-for">
                                        (@Html.DisplayFor(p => Model.ProductAttributesQtyD)/@Html.DisplayFor(p => Model.ProductAttributesQty) @Html.DisplayFor(p => Model.ProductAttributesUnit))
                                        @Html.DisplayFor(p => Model.ProductAttributes) |  @Html.DisplayFor(p => Model.ProductAttributesName)
                                        @if (!string.IsNullOrEmpty(Model.POT12))
                                        {
                                            <span>
                                                (@Html.DisplayFor(p => Model.POT12))
                                            </span>
                                        }
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4 col-xs-5">
                                        @Html.LabelByPropertyNameFor(p => p.FromStepCode, "CĐ hoàn tất:")
                                    </div>
                                    <div class="col-md-8 col-xs-7 display-for">
                                        @(string.Format("{0} | {1}", Model.FromStepCode, Model.FromStepName))
                                        @Html.HiddenFor(x => x.FromStepCode)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4 col-xs-5">
                                        @Html.LabelByPropertyNameFor(p => p.ToStepCode, "CĐ kế tiếp:")
                                    </div>
                                    @if (string.IsNullOrEmpty(Model.ToStepCode))
                                    {
                                        <div class="col-md-8 col-xs-7 display-for">
                                            @Html.RequiredDropDownListFor(x => x.ToStepCode, null, LanguageResource.Dropdownlist_Choose, new { @class = "form-control", @Required = true })

                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-8 col-xs-7 display-for">
                                            @(string.Format("{0} | {1}", Model.ToStepCode, Model.ToStepName))
                                        </div>
                                    }


                                </div>
                                @*@if (string.IsNullOrEmpty(Model.ToStepCode))
                                    {
                                        <div class="form-group">
                                            <div class="col-md-4 col-xs-5">
                                                @Html.LabelByPropertyNameFor(p => p.ToBarcode, "Thẻ treo mới:")
                                            </div>
                                            <div class="col-md-8 col-xs-7 display-for">

                                                @Html.RequiredTextboxFor(x => x.ToBarcode, new { @readonly = "readonly", @placeholder = "Vui lòng quét mã QR" })

                                            </div>
                                        </div>
                                    }*@

                                @Html.Action("_SwitchingStagesDetail", "ProductionManagement", new { @TaskId = Model.TaskId })
                                <div class="form-group table div-routing-result">

                                </div>
                            </div>
                        </div>
                        <div class="text-right">
                            <div><i>@string.Format("NV Tạo:{0} - {1: dd/MM/yyyy HH:mm}", Model.CreateByFullName, Model.CreateTime)</i></div>
                            @if (!string.IsNullOrEmpty(Model.LastEditByFullName) && Model.LastEditTime != null)
                            {
                                <div><i>@string.Format("NV cập nhật:{0} - {1: dd/MM/yyyy HH:mm}", Model.LastEditByFullName, Model.LastEditTime)</i></div>
                            }
                        </div>
                        @*Nếu có công đoạn kế tiếp mới hiện nút Chuyển*@
                        @if (string.IsNullOrEmpty(Model.ToStepCode))
                        {
                            <div class="modal-footer">
                                <span class="btn btn-default pull-left" data-dismiss="modal">@LanguageResource.Btn_Close</span>
                                <div class="pull-right">
                                    <a class="btn btn-primary" id="btn-save-switching-stages">
                                        Chuyển
                                    </a>
                                    @{ Guid? dataId = null;}
                                    @if (Model.Barcode.HasValue)
                                    {
                                        dataId = Model.Barcode;
                                    }
                                    else
                                    {
                                        dataId = Model.TaskId;
                                    }
                                    <a class="btn btn-primary" id="btn-save-switching-stages-and-continue" data-id="@dataId" style="display:none">
                                        Chuyển và Ghi nhận
                                    </a>
                                </div>
                            </div>
                        }

                    </div>
                </div>

            </form>
        </div>
    </div>
</div>