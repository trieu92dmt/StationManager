@model SaleOrderHeader80ViewModel
@{
    ViewBag.Title = LanguageResource.SaleOrderHeader80;
    string CurrentController = ConstController.SaleOrderHeader80;
    string CurrentArea = ConstArea.MES;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    bool isHasPermissionEdit = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Edit);
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @*@HtmlExtensions.CreateButton(CurrentArea, CurrentController)
            @HtmlExtensions.ExportButton(CurrentArea, CurrentController)
            @HtmlExtensions.ImportButton(CurrentArea, CurrentController)*@
    </div>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm("_Search", null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                {
                    @Html.HiddenFor(x => x.Plant, new { @Value = CurrentUser.SaleOrg })
                    <div class="panel-body">
                        <div class="row">

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.VBELN)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.VBELN, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.AUART)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.AUART, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Document Date</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("CommonDate", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Document_Date_" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="row Start">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Document_Date_From)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Document_Date_From, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Document_Date_To)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Document_Date_To, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Created on</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("CommonDate2", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Created_On_" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="row Start">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Created_On_From)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Created_On_From, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Created_On_To)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Created_On_To, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-5">
                                    @HtmlExtensions.SearchButton()
                                    <a href="/Reports/SO80Report" class="btn btn-primary report-bom-detail">Báo cáo tổng hợp</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="divSearchResult">
                        <table class="table table-bordered table-striped table-hover dataTableServerSide no-footer">
                            <thead class="isd-table-header">
                                <tr>
                                    <th class="text-center isd-table-th-stt">@LanguageResource.NumberIndex</th>
                                    <th class="text-center">@LanguageResource.MES_VBELN</th>
                                    <th>@LanguageResource.MES_AUART</th>
                                    <th class="text-center">@LanguageResource.MES_VKORG</th>
                                    <th class="text-center">@LanguageResource.MES_VTWEG</th>
                                    <th class="text-center">@LanguageResource.MES_SPART</th>
                                    <th>@LanguageResource.MES_BSTNK</th>
                                    <th class="text-center">@LanguageResource.MES_KUNNR</th>
                                    <th>@LanguageResource.MES_PS_PSP_PNR</th>
                                    <th>@LanguageResource.MES_LFGSK</th>
                                    <th class="text-center">@LanguageResource.MES_AUDAT</th>
                                    <th>@LanguageResource.MES_ERNAM</th>
                                    <th class="text-center">@LanguageResource.MES_ERDAT</th>
                                    <th class="text-center">@LanguageResource.MES_ERZET</th>
                                    <th class="text-center">@LanguageResource.Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="delete-confirm"></div>
<div class="loading-modal"></div>

@section scripts {
    <script>
        //load default and set event
        $(document).ready(function () {
            $(".ddl-common-date").trigger("change");

            //ISD.SearchInitial("@CurrentUrl",true);
            PaggingServerSide("@CurrentUrl");
            ISD.ShowMessage(window.location.href);
            ISD.UploadFile("@CurrentUrl");

        });

        $("#btn-search").click(function () {
            PaggingServerSide("@CurrentUrl");
        });

        //trigger enter click when fill in search form
        $(document).on("keyup", "#frmSearch", function (evt) {
            if (evt.keyCode == 13) {
                $("#btn-search").trigger("click");
            }
        });

        $(document).on("change", ".ddl-common-date", function () {
            var inputName = $(this).data('id');
            var commonDate = $(this).val();
            $.ajax({
                type: "POST",
                url: "/Utilities/CommonDate/Get",
                data: {
                    CommonDate: commonDate
                },
                success: function (jsonData) {
                    $("input[name='" + inputName + "From']").val(jsonData.FromDate);
                    $("input[name='" + inputName + "To']").val(jsonData.ToDate);
                    if (jsonData.FromDate != '' && jsonData.FromDate != '') {
                        $("input[name='" + inputName + "From']").prop("readonly", true);
                        $("input[name='" + inputName + "To']").prop("readonly", true);
                    } else {
                        $("input[name='" + inputName + "From']").prop("readonly", false);
                        $("input[name='" + inputName + "To']").prop("readonly", false);
                    }

                }
            });
        });
        @*$(document).on("click", ".report-bom-detail", function () {
            $btn = $(this);
            $btn.button("loading");
            var b = [];
            var a = $('td .VBELN');
            for (i = 0; i < a.length; i++) {
                b.push({ name: "soNumberViewModels", value: $($(a[i])).text() })
            }
            var formData = new FormData();

            $.each(b, function (i, val) {
                formData.append(val.name, val.value);
            });
            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/_ReportBomDetailByListSO",
                data: b,
                success: function (html) {
                    $('#popupBomDetail .modal-content').html(html);
                    $('#popupBomDetail').modal('show');
                },
                error: function (xhr, status, error) {
                    alertPopup(false, xhr.responseText);
                }
            });
        });*@
        function PaggingServerSide(controller) {
            $(".dataTableServerSide").DataTable().clear().destroy();
            $(".dataTableServerSide")
                .on('processing.dt', function (e, settings, processing) {
                    ISD.LoadingDataTable(processing, '.dataTableServerSide');
                })
                .DataTable({
                    proccessing: true,
                    serverSide: true,
                    paging: true,
                    scrollX: true,
                    //fix bug squashed header
                    autoWidth: true,
                    initComplete: function (settings) {
                        $(window).resize();
                    },
                    drawCallback: function (settings) {
                        $(window).trigger('resize');
                    },
                    //scrollCollapse: true,
                    //fixedColumns: {
                    //    leftColumns: 3
                    //},
                    ajax: {
                        type: 'POST',
                        url: "/" + controller + "/_PaggingServerSide",
                        contentType: 'application/json',
                        data: function (d) {
                            var arr = {};
                            //data search
                            var data = $("#frmSearch").serializeArray();
                            $.each(data, function (index, val) {
                                var obj = {};
                                obj[val.name] = val.value;
                                $.extend(true, arr, obj);
                            });
                            //data datatable (draw, start, length,...)
                            $.extend(true, arr, d);

                            return JSON.stringify(arr);
                        }
                    },

                    columns: [
                        //STT
                        {
                            "data": "STT",
                            "className": "text-center",
                        },
                        //Sale Order
                        {
                            "data": "VBELN",
                            "className": "text-center",
                            "render": function (data, type, row) {
                                if (type === "display" || type === "filter") {
                                    return "<a href=\"/MES/SaleOrderHeader80/ViewSO/" + data + "\" onclick=\"$(this).button('loading')\"> " + data + "</a>";
                                }
                                return '';
                            }
                        },
                        //Sale Document Type
                        {
                            "data": "AUART",
                        },
                        //Sale Org
                        {
                            "data": "VKORG",
                            "className": "text-center",
                        },
                        //Distribution channel
                        {
                            "data": "VTWEG",
                            "className": "text-center",
                        },
                        //Division
                        {
                            "data": "SPART",
                            "className": "text-center",
                        },
                        //Cust. Reference
                        {
                            "data": "BSTNK",
                        },
                        //Sold-to party
                        {
                            "data": "KUNNR",
                            "className": "text-center",
                        },
                        //WBS Element
                        {
                            "data": "PS_PSP_PNR_OUTPUT",
                        },
                        //Ovrl Delvry St
                        {
                            "data": "LFGSK",
                        },
                        //Document Date
                        {
                            "data": "AUDAT",
                            "className": "text-center",
                            "render": function (data, type, row) {
                                // If display or filter data is requested, format the date
                                if (type === "display" || type === "filter") {
                                    return moment(data).format("DD/MM/YYYY");
                                }

                                return data;
                            }
                        },
                        //Created By
                        {
                            "data": "ERNAM",
                        },
                        //Created On
                        {
                            "data": "ERDAT",
                            "className": "text-center",
                            "render": function (data, type, row) {
                                // If display or filter data is requested, format the date
                                if (type === "display" || type === "filter") {
                                    return moment(data).format("DD/MM/YYYY");
                                }

                                return data;
                            }
                        },
                        //Time
                        {
                            "data": "ERZET",
                            "className": "text-center",
                            "render": function (data, type, row) {
                                // If display or filter data is requested, format the time
                                if (type === "display" || type === "filter") {
                                    return moment(data).format("HH:mm:ss");
                                }

                                return data;
                            }
                        },
                        //Chức năng
                        {
                            "data": "SONumber",
                            "orderable": false,
                            "className": "text-center",
                            "render": function (data, type, row) {
                                if (type === "display" || type === "filter") {
                                    return "<a class=\"btn btn-info btn-view\" href=\"/MES/SaleOrderHeader80/ViewSO/" + data + "\" onclick=\"$(this).button('loading')\"><i class='fa fa-eye'></i> Xem</a>";
                                }
                                return '';
                            }
                        },
                    ],
                    destroy: true,
                    language: {
                        sProcessing: "Đang xử lý...",
                        sLengthMenu: "Xem _MENU_ mục",
                        sZeroRecords: "Không tìm thấy dòng nào phù hợp",
                        sInfo: "Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục",
                        sInfoEmpty: "Đang xem 0 đến 0 trong tổng số 0 mục",
                        sInfoFiltered: "(được lọc từ _MAX_ mục)",
                        sInfoPostFix: "",
                        sSearch: "Tìm nội dung:",
                        sUrl: "",
                        oPaginate: {
                            sFirst: "Đầu",
                            sPrevious: "&laquo;",
                            sNext: "&raquo;",
                            sLast: "Cuối"
                        }
                    },
                    columnDefs: [
                        { targets: [0, 1], visible: true },
                        { targets: 'no-sort', visible: false }
                    ],
                    "sDom": '<"top"flp>rt<"bottom"ip><"clear">',
                });

        }
    </script>
}
