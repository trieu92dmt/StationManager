@model ContentCreateViewModel
@{
    ViewBag.Title = LanguageResource.Create + " " + LanguageResource.Content.ToLower();
    string CurrentController = ConstController.Content;
    string CurrentArea = ConstArea.Marketing;
    string BaseAddress = Net5ApiDomain;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    string ApiUrl = BaseAddress + "api/" + CurrentUrl + "s";
    var CurentSaleOrg = CurrentUser.SaleOrg + " | " + CurrentUser.SaleOrgName;
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @HtmlExtensions.BackButton(CurrentArea, CurrentController)
    </h1>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="box panel-group">
            <div class="box-header with-border">
                <h3 class="box-title">@ViewBag.Title</h3>
                <div class="pull-right">
                    @HtmlExtensions.SaveButton("btn-save", LanguageResource.Btn_Save)
                    @HtmlExtensions.SaveButton("btn-save-edit", LanguageResource.Btn_SaveAndEdit)
                </div>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmCreate" }))
                {
                    //@Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.ContentName)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredTextboxFor(p => p.ContentName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.FromEmailAccountId)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredDropDownListFor(s => s.FromEmailAccountId, new SelectList(Enumerable.Empty<SelectListItem>()), LanguageResource.Dropdownlist_Choose)
                            @*<select class="with-search" id="FromEmailAccountId" name="FromEmailAccountId">
                    </select>*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.SenderName)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredTextboxFor(p => p.SenderName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.CompanyCode)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredDropDownListFor(s => s.CompanyCode, null, LanguageResource.Dropdownlist_Choose)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.SaleOrg)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredDropDownListFor(s => s.SaleOrg, null, LanguageResource.Dropdownlist_Choose)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.Subject)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredTextboxFor(p => p.Subject)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <div class="label-wrapper"><label class="control-label" for="Param">Tham số cho nội dung gửi</label></div>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBox("Param", null, new { @Value = "##FullName##", @class = "form-control text-box single-line", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.Content)
                        </div>
                        <div class="col-md-4">
                            <input id="addFile" type="file" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(p => p.Content)
                        </div>
                    </div>
                    @*<script type="text/javascript">
                var editor = CKEDITOR.replace("Content", {
                    height: 250,
                    filebrowserBrowseUrl: '/ckfinder/ckfinder.html',
                    filebrowserImageBrowseUrl: '/ckfinder/ckfinder.html?Type=Images',
                    filebrowserUploadUrl: '/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files',
                    filebrowserImageUploadUrl: '/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images',
                    filebrowserWindowWidth: '1000',
                    filebrowserWindowHeight: '700'
                });
                CKFinder.setupCKEditor(editor, '/ckfinder/');
                CKEDITOR.instances['Content'].on('change',
                    function () { CKEDITOR.instances['Content'].updateElement() });
            </script>*@
                }
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script src="~/Content/Plugin/ckeditor/ckeditor.js"></script>
    <script src="~/Areas/Marketing/Scripts/ISDNET5Common.js"></script>
    <script>
        var currentUser = "@CurrentUser.AccountId";
       
        $(document).ready(function () {
            ISDNET5.LoadEmailAccount();
            @*ISDNET5.LoadSaleOrg(@Html.Raw(Json.Encode(CurentSaleOrg)));*@
            ISDNET5.CreateInitial("@CurrentUrl");
            ISDNET5.InitCkeditorForEmailContent();
        });
    </script>
}

