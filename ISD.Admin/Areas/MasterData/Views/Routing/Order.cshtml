@model IEnumerable<RoutingViewModel>
@{
    ViewBag.Title = LanguageResource.OrderStep;
    string CurrentController = ConstController.Routing;
    string CurrentArea = ConstArea.MasterData;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
}

@using (Html.BeginForm("Order", "Routing", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmOrder" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <input type="hidden" name="isContinue" id="isContinue" value="@ViewBag.isContinue" />
    <input type="hidden" name="Data" id="Data" value="@ViewBag.Data" />

    <div class="content-header clearfix">
        <h1 class="pull-left">
            @ViewBag.Title
            @HtmlExtensions.BackButton(CurrentArea, CurrentController)
        </h1>
        <div class="pull-right">
            <a class="btn bg-blue" id="btn-save"><i class="fa fa-floppy-o"></i> @LanguageResource.Btn_Save</a>
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        @{
                            int i = 0;
                            int k = -1;
                        }
                        <ul class="sortable-list" id="list1">
                            @foreach (var item in (List<RoutingViewModel>)ViewBag.List1)
                            {
                                i++;
                                k++;
                                <li id="@item.StepId">@i. @item.StepCode</li>
                            }
                        </ul>
                        <ul class="sortable-list" id="list2">
                            @foreach (var item in (List<RoutingViewModel>)ViewBag.List2)
                            {
                                i++;
                                k++;
                                <li id="@item.StepId">@i. @item.StepCode</li>
                            }
                        </ul>
                        <ul class="sortable-list" id="list3">
                            @foreach (var item in (List<RoutingViewModel>)ViewBag.List3)
                            {
                                i++;
                                k++;
                                <li id="@item.StepId">@i. @item.StepCode</li>
                            }
                        </ul>
                        <ul class="sortable-list" id="list4">
                            @foreach (var item in (List<RoutingViewModel>)ViewBag.List4)
                            {
                                i++;
                                k++;
                                <li id="@item.StepId">@i. @item.StepCode</li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .sortable-list {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 25%;
        float: left;
    }

        .sortable-list li {
            margin: 5px 5px 10px 10px;
            padding: 10px;
            font-size: 18px;
            border: 1px solid #c5c5c5;
            background: #f6f6f6;
        }

    .sortable-list2 {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 14%;
        float: left;
        position: relative;
    }

        .sortable-list2 li:not(.workshop) {
            margin: 5px 5px 10px 10px;
            padding: 10px;
            font-size: 18px;
            border: 1px solid #c5c5c5;
            background: #f6f6f6;
        }

        .sortable-list2 li.workshop {
            text-align: center;
            text-transform: uppercase;
        }

    .li-hidden {
        opacity: 0;
    }

    .routing-step {
        margin-top: 10px !important;
    }
</style>
@section head{

    @*<link href="~/Areas/Work/CSS/demo.css" rel="stylesheet" />*@
    @*<link href="~/Areas/Work/CSS/jsplumbtoolkit-demo.css" rel="stylesheet" />*@
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">



}
@section scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>

        $(document).ready(function () {
            $('#list1, #list2, #list3, #list4').sortable({
                connectWith: '.sortable-list',
                update: function (event, ui) {
                    var changedList = this.id;
                    var order = $(this).sortable('toArray');
                    var positions = order.join(';');
                }
            });
        });

        $(document).on("click", "#btn-save", function () {
            var $btn = $(this);
            $btn.button('loading');

            var orderedList = [];
            var index = 0;
            $("#list1 li").each(function (i, item) {
                var StepId = $(this).attr("id");
                index = i + 1;
                orderedList.push({ 'StepId': StepId, 'OrderIndex': index });
            });
            $("#list2 li").each(function (i, item) {
                var StepId = $(this).attr("id");
                index = index + 1;
                orderedList.push({ 'StepId': StepId, 'OrderIndex': index });
            });
            $("#list3 li").each(function (i, item) {
                var StepId = $(this).attr("id");
                index = index + 1;
                orderedList.push({ 'StepId': StepId, 'OrderIndex': index });
            });
            $("#list4 li").each(function (i, item) {
                var StepId = $(this).attr("id");
                index = index + 1;
                orderedList.push({ 'StepId': StepId, 'OrderIndex': index });
            });

            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/Order",
                data: {
                    orderedList: orderedList
                },
                success: function (jsonData) {
                    $btn.button('reset');
                    if (jsonData.Success == true) {
                        alertPopup(true, jsonData.Data);
                    }
                    else {
                        if (jsonData.Data != null && jsonData.Data != "") {
                            alertPopup(false, jsonData.Data);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    $btn.button('reset');
                    alertPopup(false, xhr.responseText);
                }
            });
        });
    </script>
}

