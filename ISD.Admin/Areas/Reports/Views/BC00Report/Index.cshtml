@model BC00ReportViewModel
@{
    Layout = "~/Views/Shared/_Layout_Report.cshtml";
    ViewBag.Title = LanguageResource.BC00Report;
    string CurrentController = ConstController.BC00Report;
    string CurrentArea = ConstArea.Reports;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    bool isHasPermissionEdit = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Edit);
    var listSystemTemplate = (List<PivotTemplateViewModel>)ViewBag.SystemTemplate;
    var listUserTemplate = (List<PivotTemplateViewModel>)ViewBag.UserTemplate;
    var templateId = ViewBag.TemplateId;
    var modeSearch = ViewBag.ModeSearch;
    ViewBag.CurrentUrl = CurrentUrl;
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @*@HtmlExtensions.CreateButton(CurrentArea, CurrentController)
            @HtmlExtensions.ExportButton(CurrentArea, CurrentController)
            @HtmlExtensions.ImportButton(CurrentArea, CurrentController)*@
    </div>
</div>
@Html.Hidden("TemplateId", null, new { value = templateId })

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm("_Search", null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                {
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.LSX)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.LSX, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.LSXSAP)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.LSXSAP, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.VBELN)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.VBELN, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.POSNR)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.POSNR, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">@LanguageResource.Reports_DateCompleted</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("CommonDate", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Completed", @id = "created-date", Name = "CreatedCommonDate" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Completed">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.CompletedFromDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.CompletedFromDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.CompletedToDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.CompletedToDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Thứ tự ưu tiên</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("TopRow", null, null, new { @class = "form-control with-search" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Freeze Column</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("FreezeColumn", null, null, new { @class = "form-control with-search" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div id="frm-button" class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-6 col-md-offset-3 input-group">

                                    <select id="SearchTemplateId" name="SearchTemplateId">
                                        <option value="">@LanguageResource.Dropdownlist_RecentSearch</option>
                                    </select>
                                    <span class="input-group-btn" style="padding-right:25px;padding-left: 10px;">
                                        <a href="#" class="btn btn-delete-frmSearch display-none" style="color: coral;" title="Xoá mẫu tìm kiếm"><i class="fa fa-trash-o fa-lg" aria-hidden="true"></i></a>
                                        <a href="#" class="btn btn-save-frmSearch" title="Lưu mẫu tìm kiếm"><i class="fa fa-thumb-tack fa-lg" aria-hidden="true"></i></a>
                                    </span>
                                    <a href="#" id="btn-view" class="btn btn-primary" style="margin-left: 10px;"><i class="fa fa-refresh"></i> Chạy báo cáo</a>&nbsp;
                                    @*<a href="#" class="btn btn-success" id="btn-export"><i class="fa fa-download"></i> Export</a>*@
                                    @*@HtmlExtensions.ExportReportButton(CurrentArea, CurrentController)*@
                                    @*<a id="btn-export-pivot" class="btn btn-success btn-export" href="#"><i class="fa fa-download"></i> Export Excel</a>*@
                                </div>
                            </div>
                        </div>
                        @*<div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-5">
                                        @HtmlExtensions.SearchButton()
                                        <a href="#" class="btn btn-primary report-bom-detail">Báo cáo tổng hợp</a>
                                    </div>
                                </div>
                            </div>*@
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="form-horizontal" id="report-content">
        <div class="panel-group">
            <div class="panel panel-default">
                @*<div class="dropdown pull-right" style="padding-top:5px; padding-right: 5px;">
                        @Html.Partial("~/Areas/Reports/Views/_PivotTemplateHandle.cshtml")
                    </div>*@

                <div class="panel-body">
                    @*<div class="row">
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="pull-right">
                                    <a id="btn-create-report" class="btn btn-primary" style="margin-left: 10px;"><i class="fa fa-plus-square"></i> Thêm mới</a>
                                </div>
                            </div>
                        </div>
                    </div>*@
                    <script type="text/javascript">
                        function OnBeginGridCallback(s, e) {
                            e.customArgs = MVCxClientUtils.GetSerializedEditorValuesInContainer("options");
                        }
                        var isEditLeadTime = false;
                        var isEditStartDate = false;
                        var isEditEndDate = false;
                        var isEditCompletedPercent = false;
                        var isEditWorkShop = false;
                        function handleEditReportModalPopup(s, e) {
                            //Id
                            var key = e.key;
                            key = s.GetRowKey(e.visibleIndex);
                            $('#edit-report-modal #BC01IdEdit').val(key);

                             //Check các field chỉnh sửa theo cấu hình
                             $.ajax({
                                type: "GET",
                                url: "/@CurrentUrl/GetConfigFieldEdit",
                                data: {
                                    BC01Id: key,
                                },
                                 success: function (jsonData) {
                                     if (jsonData.IsSuccess) {
                                         if (jsonData.Data) {
                                             //Leadtime
                                             if (jsonData.Data.isEditLeadTime) {
                                                 $('#edit-report-modal #lead-time-edit').show();
                                                 isEditLeadTime = true;
                                             }
                                             else {
                                                 $('#edit-report-modal #lead-time-edit').hide();
                                                 isEditLeadTime = false;
                                             }
                                             //StartDate
                                             if (jsonData.Data.isEditStartDate) {
                                                 $('#edit-report-modal #start-date-edit').show();
                                                 isEditStartDate = true;
                                             }
                                             else {
                                                 $('#edit-report-modal #start-date-edit').hide();
                                                 isEditStartDate = false;
                                             }
                                             //EndDate
                                             if (jsonData.Data.isEditEndDate) {
                                                 $('#edit-report-modal #end-date-edit').show();
                                                 isEditEndDate = true;
                                             }
                                             else {
                                                 $('#edit-report-modal #end-date-edit').hide();
                                                 isEditEndDate = false;
                                             }
                                             //CompletedPercent
                                             if (jsonData.Data.isEditCompletedPercent) {
                                                 $('#edit-report-modal #completed-percent-edit').show();
                                                 isEditCompletedPercent = true;
                                             }
                                             else {
                                                 $('#edit-report-modal #completed-percent-edit').hide();
                                                 isEditCompletedPercent = false;
                                             }
                                             //WorkShop
                                             if (jsonData.Data.isEditWorkShop) {
                                                 $('#edit-report-modal #work-shop-edit').show();
                                                 isEditWorkShop = true;
                                             }
                                             else {
                                                 $('#edit-report-modal #work-shop-edit').hide();
                                                 isEditWorkShop = false;
                                             }
                                         }
                                    }
                                }
                             });

                            //Các field cần hiển thị thông tin
                            s.GetRowValues(e.visibleIndex, "LSX;VBELN;POSNR;LSXSAP;ProductCode;Stock;UTCT;ErrorDepartment;Status;Leadtime;StartDate;FinishDate;CompletedPercent;WorkShop;StartDateChange;FinishDateChange;ErrorGroup;ErrorDetail", OnGetRowValues);

                            $('#edit-report-modal').modal('show');
                        }
                        function OnGetRowValues(values) {
                            //var id = values[0];
                            //LSX
                            var LSX = values[0];
                            $('#edit-report-modal #LSXEdit').val(LSX);
                            //SO
                            var VBELN = values[1];
                            $('#edit-report-modal #VBELNEdit').val(VBELN);
                            //SO Line
                            var POSNR = values[2];
                            $('#edit-report-modal #POSNREdit').val(POSNR);
                            //LSX SAP
                            var LSXSAP = values[3];
                            $('#edit-report-modal #LSXSAPEdit').val(LSXSAP);
                            //Mã sản phẩm
                            var ProductCode = values[4];
                            $('#edit-report-modal #ProductCodeEdit').val(ProductCode);
                            //Công đoạn thực hiện
                            var Stock = values[5];
                            $('#edit-report-modal #StockEdit').val(Stock);
                            //Ưu tiên chỉnh tay
                            var UTCT = values[6];
                            $('#edit-report-modal #STTEdit').val(UTCT);
                            //Phòng ban lỗi
                            var ErrorDepartment = values[7];
                            $('#edit-report-modal #ErrorDepartmentEdit').val(ErrorDepartment).change();
                            //Tình trạng
                            var Status = values[8];
                            $('#edit-report-modal #StatusEdit').val(Status);
                            //LeadTime
                            if (isEditLeadTime) {
                                var Leadtime = values[9];
                                $('#edit-report-modal #LeadtimeEdit').val(Leadtime);
                            }
                            //Ngày bắt đầu
                            if (isEditStartDate) {
                                var StartDate = moment(values[10], 'DD/MM/YYYY').format('YYYY-MM-DD');
                                $('#edit-report-modal #StartDateEdit').val(StartDate);
                            }
                            //Ngày kết thúc
                            if (isEditEndDate) {
                                var EndDate = moment(values[11], 'DD/MM/YYYY').format('YYYY-MM-DD');
                                $('#edit-report-modal #EndDateEdit').val(EndDate);
                            }
                            //% hoàn thành
                            if (isEditCompletedPercent) {
                                var CompletedPercent = values[12];
                                $('#edit-report-modal #CompletedPercentEdit').val(CompletedPercent);
                            }
                            //Phân xưởng
                            if (isEditWorkShop) {
                                var WorkShop = values[13];
                                $('#edit-report-modal #WorkShopEdit').val(WorkShop).change();
                            }
                            //Ngày bắt đầu điều chỉnh
                            var StartDateChange = moment(values[14], 'DD/MM/YYYY').format('YYYY-MM-DD');
                            $('#edit-report-modal #StartDateChangeEdit').val(StartDateChange);
                            //Ngày kết thúc điều chỉnh
                            var EndDateChange = moment(values[15], 'DD/MM/YYYY').format('YYYY-MM-DD');
                            $('#edit-report-modal #EndDateChangeEdit').val(EndDateChange);
                            //Nhóm lỗi
                            var ErrorGroup = values[16];
                            $('#edit-report-modal #ErrorGroupEdit').val(ErrorGroup).change();
                            //Mô tả chi tiết lỗi
                            var ErrorDetail = values[17];
                            $('#edit-report-modal #ErrorDetailEdit').val(ErrorDetail);
                        }
                    </script>
                    <div style="overflow: auto;">
                        <form>
                            @Html.Action("BC00ReportPivotGridPartial", new { searchViewModel = ViewBag.Search, templateId = ViewBag.TemplateId })
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="delete-confirm"></div>
<div class="loading-modal"></div>
@section components {
    <div id="popupSaveTemplate" class="modal fade" role="dialog">
        @Html.Partial("~/Areas/Reports/Views/_SaveTemplatePopup.cshtml")
    </div>
    <div class="divProfilePopup"></div>
    <!--Modal popup sửa báo cáo-->
    @Html.Partial("_EditRecordReport")
    <!--Modal popup thêm mới báo cáo-->
    @Html.Partial("_CreateRecordReport")
}

@section jquery {
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Content/jquery-ui.js"></script>
}
@section scripts {
    <script src="~/Scripts/Common/ISD.SearchTemplate.js"></script>
    <script src="~/Scripts/Common/PivotTemplate.js"></script>
    <script>
	    //Define it
	    var currentUserId = "@CurrentUser.AccountId";
	    var currentPageId = "@ViewBag.PageId";
    </script>
    <script>
    //load default and set event
    $(document).ready(function () {
        var modeTemplateSearch = "@modeSearch";

        if (modeTemplateSearch == "Recently") {
            LoadTemplateSearch(currentUserId, currentPageId, "Recently");
            var recentSearch = JSON.parse(localStorage.getItem('pageId-' + currentPageId));
            if (recentSearch) {
                FillToInput(recentSearch);
            }
        }
        else {
            LoadTemplateSearch(currentUserId, currentPageId);
            localStorage.removeItem('pageId-' + currentPageId)
        }
        ISDPivotTemplate.Init("@CurrentUrl", "@CurrentController");

        numericInput();
    });
    var currentIndex = 1;
    $(document).on("click", "#btn-export", function () {
        var $btn = $(this);
        $btn.button("loading");
        var arr = {};
        var data = $("#frmSearch").serializeArray();
        var obj = {};
        $.each(data, function (index, val) {
            obj[val.name] = val.value;
            $.extend(true, arr, obj)
        });
        obj["TemplateId"] = $('#TemplateId').val();
        $.extend(true, arr, obj);
        //Save localStorage
        localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
        // ExportPivotGrid(arr);
        ISD.Download("/@CurrentUrl/ExportPivot", arr);
        $btn.button("reset");
    });
    $(document).on("click", "#btn-view", function () {
        var $btn = $(this);
        $btn.button("loading")
        var arr = {};
        var data = $("#frmSearch").serializeArray();

        var obj = {};
        $.each(data, function (index, val) {
            obj[val.name] = val.value;
            $.extend(true, arr, obj)
        });
        obj["IsView"] = true;
        $.extend(true, arr, obj);
        obj["pivotTemplate"] = $('#TemplateId').val();
        obj["modeSearch"] = "Recently";
        $.extend(true, arr, obj);
        //SO Number
        var VBELNList = $('#VBELNList').val();
        if (VBELNList != null && VBELNList.length > 0) {
            var department = {};
            department['VBELNList'] = VBELNList;
            $.extend(true, arr, department);
        }
        //Save localStorage
        localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
        ISD.Download("/@CurrentUrl/ViewDetail", arr);
    });
    $(document).off("click", ".pivot-template-item").on("click", ".pivot-template-item", function () {
        var $btn = $(this);
        var arr = {};
        var data = $("#frmSearch").serializeArray();

        var obj = {};
        $.each(data, function (index, val) {
            obj[val.name] = val.value;
            $.extend(true, arr, obj)
        });
        obj["IsView"] = true;
        obj["modeSearch"] = "Recently";
        $.extend(true, arr, obj);
        var templateId = $(this).data('id');
        obj["pivotTemplate"] = templateId;
        $.extend(true, arr, obj);
        localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
        ISD.Download("/@CurrentUrl/ChangeTemplate", arr);
    });
    </script>
    <script>
        //Get data of form search name function is required
        function GetDataFormSearch() {
            //Get value in search form
            var formdata = $("#frmSearch").serializeArray();
            var data = {};
            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });
            return JSON.stringify(data);
        }
        //Fill data to form search name function is required
        function FillToInputSpecial(recentSearch) {
            if (recentSearch.SearchProfileId != "") {
                $("#SearchProfileCode").val(recentSearch.SearchProfileCodeRecent);
                $("#SearchProfileName").val(recentSearch.SearchProfileNameRecent);
                $("#SearchProfileCode").prop("disabled", true);
            }
            if (recentSearch.SearchProductId != "") {
                $("#ProductCode").val(recentSearch.SearchProductCodeRecent);
                $("#ProductName").val(recentSearch.SearchProductNameRecent);
                $("#ProductCode").prop("disabled", true);
            }
        }
        //common date
        $(document).on("change", ".ddl-common-date", function () {
            var cssClass = $(this).data('id');
            var commonDate = $(this).val();
            $.ajax({
                type: "POST",
                url: "/Utilities/CommonDate/Get",
                data: {
                    CommonDate: commonDate
                },
                success: function (jsonData) {
                    $("." + cssClass + " input[name='" + cssClass + "FromDate']").val(jsonData.FromDate);
                    $("." + cssClass + " input[name='" + cssClass + "ToDate']").val(jsonData.ToDate);
                    if (jsonData.FromDate != '' && jsonData.FromDate != '') {
                        $("." + cssClass + " input[name='" + cssClass + "FromDate']").prop("disabled", true);
                        $("." + cssClass + " input[name='" + cssClass + "ToDate']").prop("disabled", true);
                    } else {
                        $("." + cssClass + " input[name='" + cssClass + "FromDate']").prop("disabled", false);
                        $("." + cssClass + " input[name='" + cssClass + "ToDate']").prop("disabled", false);
                    }

                }
            });
        });

        $(document).on("change", "#StoreId", function () {
            var Id = $(this).data('id');
            $.ajax({
                type: "GET",
                url: "/Reports/BC00Report/_LoadWorkShopBy?StoreId=" + Id,
                success: function (html) {
                    $('.work-shop-list').html(html);
                }
            });
        });


        // Export Excel
        $(document).on("click", "#btn-export-pivot", function () {
            var $btn = $(this);
            $btn.button("loading");
            var arr = {};
            var data = $("#frmSearch").serializeArray();

            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["TemplateId"] = $('#TemplateId').val();
            $.extend(true, arr, obj);
            //SO Number
            var VBELNList = $('#VBELNList').val();
            if (VBELNList != null && VBELNList.length > 0) {
                var department = {};
                department['VBELNList'] = VBELNList;
                $.extend(true, arr, department);
            }
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ExportPivot", arr);
            $btn.button("reset");
        });
        $("#frmSearch").bind('ajax:complete', function () {

            $("#btn-export-pivot").button('reset');

            $("#report-content").show();

        });

        function numericInput() {
            $('#STTEdit').inputFilter(function (value) {
                return /^-?\d*$/.test(value);
            });

            $('#LeadtimeEdit').inputFilter(function (value) {
                return /^-?\d*[.,]?\d*$/.test(value);
            });

            $('#LeadtimeCreate').inputFilter(function (value) {
                return /^-?\d*[.,]?\d*$/.test(value);
            });

            $('#CompletedPercentCreate').inputFilter(function (value) {
                return /^-?\d*[.,]?\d*$/.test(value);
            });

            $('#CompletedPercentEdit').inputFilter(function (value) {
                return /^-?\d*[.,]?\d*$/.test(value);
            });
        }
        //Xử lý button lưu cập nhật trên danh sách của báo cáo
        $(document).on('click', '#btn-save-edit', function () {
            var $btn = $(this);
            $btn.button('loading');
            var BC01Id = $('#BC01IdEdit').val();
            var STT = $('#STTEdit').val();
            var ErrorDepartment = $('#ErrorDepartmentEdit').val();
            var Status = $('#StatusEdit').val();
            //Leadtime
            var Leadtime = $('#LeadtimeEdit').val();
            //Ngày bắt đầu
            var StartDate = $('#StartDateEdit').val();
            //Ngày kết thúc
            var EndDate = $('#EndDateEdit').val();
            //% hoàn thành
            var CompletedPercent = $('#CompletedPercentEdit').val();
            //Phân xưởng
            var WorkShop = $('#WorkShopEdit').val();
            //Ngày bắt đầu điều chỉnh
            var StartDateChange = $('#StartDateChangeEdit').val();
            //Ngày kết thúc điều chỉnh
            var EndDateChange = $('#EndDateChangeEdit').val();
            //Nhóm lỗi
            var ErrorGroup = $('#ErrorGroupEdit').val();
            //Mô tả chi tiết lỗi
            var ErrorDetail = $('#ErrorDetailEdit').val();
            $.ajax({
                type: "POST",
                url: "/@CurrentUrl/SaveEditReport",
                data: {
                    BC01Id: BC01Id,
                    STT: STT,
                    ErrorDepartment: ErrorDepartment,
                    Status: Status,
                    Leadtime: Leadtime,
                    StartDate: StartDate,
                    EndDate: EndDate,
                    CompletedPercent: CompletedPercent,
                    WorkShop: WorkShop,
                    StartDateChange: StartDateChange,
                    EndDateChange: EndDateChange,
                    ErrorGroup: ErrorGroup,
                    ErrorDetail: ErrorDetail,
                },
                success: function (jsonData) {
                    $btn.button('reset');
                    if (jsonData.IsSuccess) {
                        $("#edit-report-modal").modal('hide');
                        $("#btn-view").trigger('click');
                    }
                    else {
                        $('#edit-report-modal .modal-popup-alert-message').html(jsonData.Message);
                        $('#edit-report-modal .modalPopupAlert').show();
                    }
                }
            });
        });


        //Xử lý button thêm mới record cho báo cáo
        $(document).on('click', '#btn-create-report', function () {
            $('#create-report-modal').modal('show');
        });

        //autocomplete
        $("#LSXDTCreate").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/@CurrentUrl/SearchLSXDT",
                    data: JSON.stringify({ "SearchText": request.term, }),
                    dataType: "json",
                    success: function (data) {
                        if (data.IsSuccess) {
                            response($.map(data.Data, function (item) {
                                /* return { label: item.ProductName, id: item.ProductId, value: item.ProductCode, code: item.ProductName };*/
                                return { label: item, value: item };
                            }));
                        }
                        else {
                            if (data.Message) {
                                //alertPopup(false, data.Message);
                            }
                        }

                        //response(data);
                    },
                    error: function (xhr, status, error) {
                        //alertPopup(false, xhr.responseText);
                    }
                });
            },
            autoFocus: true,
            //prevent another value except dropdown value
            //change: function (event, ui) {
            //    if (ui.item === null) {
            //        $("#ProductName").val("");
            //        $("#ProductId").val("");
            //        $("#Quantiny").val("");
            //        $("#ProductName").focus();
            //    }
            //},
            select: function (event, ui) {
                $(this).val(ui.item.value);
            }
        }).focus(function () {
            if (!$(this).val()) {
                $(this).autocomplete("search", " ");
            }
        });

        $("#DSXCreate").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/@CurrentUrl/SearchDSX",
                    data: JSON.stringify({ "SearchText": request.term, LSXDT: $("#LSXDTCreate").val() }),
                    dataType: "json",
                    success: function (data) {
                        if (data.IsSuccess) {
                            response($.map(data.Data, function (item) {
                                return { label: item.name, value: item.name, id: item.id };
                            }));
                        }
                        else {
                            if (data.Message) {
                                //alertPopup(false, data.Message);
                            }
                        }

                        //response(data);
                    },
                    error: function (xhr, status, error) {
                        //alertPopup(false, xhr.responseText);
                    }
                });
            },
            autoFocus: true,
            //prevent another value except dropdown value
            //change: function (event, ui) {
            //    if (ui.item === null) {
            //        $("#ProductName").val("");
            //        $("#ProductId").val("");
            //        $("#Quantiny").val("");
            //        $("#ProductName").focus();
            //    }
            //},
            select: function (event, ui) {
                $(this).val(ui.item.value);
                $("#DSXCreateId").val(ui.item.id);
            }
        }).focus(function () {
            if (!$(this).val()) {
                $(this).autocomplete("search", " ");
            }
        });

        $("#LSXSAPCreate").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/@CurrentUrl/SearchLSXSAP",
                    data: JSON.stringify({ "SearchText": request.term, DSXId: $("#DSXCreateId").val() }),
                    dataType: "json",
                    success: function (data) {
                        if (data.IsSuccess) {
                            response($.map(data.Data, function (item) {
                                return { label: item.name, value: item.name, id: item.id };
                            }));
                        }
                        else {
                            if (data.Message) {
                                //alertPopup(false, data.Message);
                            }
                        }

                        //response(data);
                    },
                    error: function (xhr, status, error) {
                        //alertPopup(false, xhr.responseText);
                    }
                });
            },
            autoFocus: true,
            //prevent another value except dropdown value
            //change: function (event, ui) {
            //    if (ui.item === null) {
            //        $("#ProductName").val("");
            //        $("#ProductId").val("");
            //        $("#Quantiny").val("");
            //        $("#ProductName").focus();
            //    }
            //},
            select: function (event, ui) {
                $(this).val(ui.item.value);
                $("#LSXSAPCreateId").val(ui.item.id);

                //Load thông tin mã sp
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/@CurrentUrl/GetLSXSAPInfo",
                    data: JSON.stringify({ LSXSAPId: $("#LSXSAPCreateId").val() }),
                    dataType: "json",
                    success: function (data) {
                        if (data.IsSuccess) {
                            $('#ProductCodeCreateId').val(data.Data.ProductId);
                            $('#ProductCodeCreate').val(data.Data.ProductName);
                            $('#VBELNCreate').val(data.Data.SONumber);
                            $('#POSNRCreate').val(data.Data.SOLineNumber);
                            $('#STTCreate').val(data.Data.STT);
                        }
                        else {
                            if (data.Message) {
                                //alertPopup(false, data.Message);
                            }
                        }

                        //response(data);
                    },
                    error: function (xhr, status, error) {
                        //alertPopup(false, xhr.responseText);
                    }
                });
            }
        }).focus(function () {
            if (!$(this).val()) {
                $(this).autocomplete("search", " ");
            }
        });

        $("#StockCreate").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/@CurrentUrl/GetStockList",
                    data: JSON.stringify({ "SearchText": request.term, LSXSAPId: $("#LSXSAPCreateId").val() }),
                    dataType: "json",
                    success: function (data) {
                        if (data.IsSuccess) {
                            response($.map(data.Data, function (item) {
                                return { label: item.name, value: item.name, id: item.id };
                            }));
                        }
                        else {
                            if (data.Message) {
                                //alertPopup(false, data.Message);
                            }
                        }

                        //response(data);
                    },
                    error: function (xhr, status, error) {
                        //alertPopup(false, xhr.responseText);
                    }
                });
            },
            autoFocus: true,
            //prevent another value except dropdown value
            //change: function (event, ui) {
            //    if (ui.item === null) {
            //        $("#ProductName").val("");
            //        $("#ProductId").val("");
            //        $("#Quantiny").val("");
            //        $("#ProductName").focus();
            //    }
            //},
            select: function (event, ui) {
                $(this).val(ui.item.value);
                $("#StockCodeCreate").val(ui.item.id);

                //Check các field chỉnh sửa theo cấu hình
                $.ajax({
                    type: "GET",
                    url: "/@CurrentUrl/GetConfigFieldCreate",
                    data: {
                        StockCode: ui.item.id,
                    },
                    success: function (jsonData) {
                        if (jsonData.IsSuccess) {
                            if (jsonData.Data) {
                                //Leadtime
                                if (jsonData.Data.isCreateLeadTime) {
                                    $('#create-report-modal #lead-time-create').show();
                                }
                                else {
                                    $('#create-report-modal #lead-time-create').hide();
                                }
                                //StartDate
                                if (jsonData.Data.isCreateStartDate) {
                                    $('#create-report-modal #start-date-create').show();
                                }
                                else {
                                    $('#create-report-modal #start-date-create').hide();
                                }
                                //EndDate
                                if (jsonData.Data.isCreateEndDate) {
                                    $('#create-report-modal #end-date-create').show();
                                }
                                else {
                                    $('#create-report-modal #end-date-create').hide();
                                }
                                //CompletedPercent
                                if (jsonData.Data.isCreateCompletedPercent) {
                                    $('#create-report-modal #completed-percent-create').show();
                                }
                                else {
                                    $('#create-report-modal #completed-percent-create').hide();
                                }
                            }
                        }
                    }
                });
            }
        }).focus(function () {
            if (!$(this).val()) {
                $(this).autocomplete("search", " ");
            }
        });

        $(document).on('input', '#LSXDTCreate', function () {
            $('#DSXCreateId').val('');
            $('#DSXCreate').val('');
            $('#LSXSAPCreateId').val('');
            $('#LSXSAPCreate').val('');
        });

        $(document).on('input', '#DSXCreate', function () {
            $('#DSXCreateId').val('');
            $('#LSXSAPCreateId').val('');
            $('#LSXSAPCreate').val('');
        });

        $(document).on('input', '#LSXSAPCreate', function () {
            $('#LSXSAPCreateId').val('');
            $('#ProductCodeCreateId').val('');
            $('#ProductCodeCreate').val('');
            $('#VBELNCreate').val('');
            $('#POSNRCreate').val('');
        });

        $(document).on('focusout', '#DSXCreate', function () {
            if (!$('#DSXCreateId').val()) {
                $('#DSXCreateId').val('');
                $('#DSXCreate').val('');
            }
        });

        $(document).on('focusout', '#LSXSAPCreate', function () {
            if (!$('#LSXSAPCreateId').val()) {
                $('#LSXSAPCreateId').val('');
                $('#LSXSAPCreate').val('');
            }
        });

        $(document).on('focusout', '#StockCreate', function () {
            if (!$('#StockCodeCreate').val()) {
                $('#StockCodeCreate').val('');
                $('#StockCreate').val('');
            }
        });

        //xử lý button lưu thêm mới record cho báo cáo
        $(document).on('click', '#btn-save-create', function () {
            var frm = $("#frm-create-report");
            if (frm.valid()) {
                var $btn = $(this);
                $btn.button('loading');
                //LSX SAP
                var LSXSAP = $('#LSXSAPCreate').val();
                //Công đoạn thực hiện
                var StockCode = $('#StockCodeCreate').val();
                //STT (Mức độ ưu tiên)
                var STT = $('#STTCreate').val();
                //Phòng ban lỗi
                var ErrorDepartment = $('#ErrorDepartmentCreate').val();
                //Tình trạng
                var Status = $('#StatusCreate').val();
                //Leadtime
                var Leadtime = $('#LeadtimeCreate').val();
                //Ngày bắt đầu
                var StartDate = $('#StartDateCreate').val();
                //Ngày kết thúc
                var EndDate = $('#EndDateCreate').val();
                //% hoàn thành
                var CompletedPercent = $('#CompletedPercentCreate').val();
                $.ajax({
                    type: "POST",
                    url: "/@CurrentUrl/SaveCreateReport",
                    data: {
                        LSXSAP: LSXSAP,
                        //Công đoạn thực hiện
                        StockCode: StockCode,
                        //STT (Mức độ ưu tiên)
                        STT: STT,
                        //Phòng ban lỗi
                        ErrorDepartment: ErrorDepartment,
                        //Tình trạng
                        Status: Status,
                        //Leadtime
                        Leadtime: Leadtime,
                        //Ngày bắt đầu
                        StartDate: StartDate,
                        //Ngày kết thúc
                        EndDate: EndDate,
                        //% hoàn thành
                        CompletedPercent: CompletedPercent,
                    }
                    ,
                    success: function (jsonData) {
                        $btn.button('reset');
                        if (jsonData.IsSuccess) {
                            $("#create-report-modal").modal('hide');
                            $("#btn-view").trigger('click');
                        }
                        else {
                            $('#create-report-modal .modal-popup-alert-message').html(jsonData.Message);
                            $('#create-report-modal .modalPopupAlert').show();
                        }
                    }
                });
            }
            else {
                //show error invalid
                var validator = frm.validate();
                var arr = [];
                $.each(validator.errorMap, function (index, value) {
                    console.log('Id: ' + index + ' Message: ' + value);
                    arr.push(value);
                });
                if (arr.length > 0) {
                    setMessagePopup('#create-report-modal', arr);
                    $('#create-report-modal .modalPopupAlert').show();
                }
                $btn.button('reset');
            }
        });

        function setMessagePopup(div, message) {
            if (Array.isArray(message)) {
                var arr = [];
                $.each(message, function (i, item) {
                    //Code cũ
                    //arr[i] = {err: item.ErrorMessage }
                    if (item.ErrorMessage != undefined && item.ErrorMessage != "") {
                        arr[i] = { err: item.ErrorMessage }
                    }
                    else {
                        arr[i] = { err: item }
                    }
                    $(div + " .modal-popup-alert-message").append("<li>" + arr[i].err + "</li>");
                });
            }
            else {
                $(div + " .modal-popup-alert-message").html(message);
            }
        }

        //reset form
        $(document).on('show.bs.modal', '#create-report-modal', function () {
            $('#frm-create-report').trigger('reset');
        });
    </script>
}
