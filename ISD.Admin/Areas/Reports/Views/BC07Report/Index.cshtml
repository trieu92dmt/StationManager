@model BC07ReportViewModel
@{
    Layout = "~/Views/Shared/_Layout_Report.cshtml";
    ViewBag.Title = LanguageResource.BC07Report;
    string CurrentController = ConstController.BC07Report;
    string CurrentArea = ConstArea.Reports;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    bool isHasPermissionEdit = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Edit);
    var listSystemTemplate = (List<PivotTemplateViewModel>)ViewBag.SystemTemplate;
    var listUserTemplate = (List<PivotTemplateViewModel>)ViewBag.UserTemplate;
    var templateId = ViewBag.TemplateId;
    var modeSearch = ViewBag.ModeSearch;
    ViewBag.CurrentUrl = CurrentUrl;
}
@section head {
    <style>
        /* Styles the thumbnail */

        a.lightbox img {
            /*height: 80px;*/
            border: 3px solid white;
            box-shadow: 0px 0px 8px rgba(0,0,0,.3);
            margin: 3px 0px 3px 0px;
        }

        /* Styles the lightbox, removes it from sight and adds the fade-in transition */

        .lightbox-target {
            position: fixed;
            top: -100%;
            width: 100%;
            background: rgba(0,0,0,.7);
            width: 100%;
            opacity: 0;
            -webkit-transition: opacity .5s ease-in-out;
            -moz-transition: opacity .5s ease-in-out;
            -o-transition: opacity .5s ease-in-out;
            transition: opacity .5s ease-in-out;
            overflow: hidden;
            z-index: 10;
        }

            /* Styles the lightbox image, centers it vertically and horizontally, adds the zoom-in transition and makes it responsive using a combination of margin and absolute positioning */

            .lightbox-target img {
                margin: auto;
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                max-height: 0%;
                max-width: 0%;
                border: 3px solid white;
                box-shadow: 0px 0px 8px rgba(0,0,0,.3);
                box-sizing: border-box;
                -webkit-transition: .5s ease-in-out;
                -moz-transition: .5s ease-in-out;
                -o-transition: .5s ease-in-out;
                transition: .5s ease-in-out;
            }

        /* Styles the close link, adds the slide down transition */

        a.lightbox-close {
            display: block;
            width: 50px;
            height: 50px;
            box-sizing: border-box;
            background: white;
            color: black;
            text-decoration: none;
            position: absolute;
            top: -80px;
            right: 30px;
            -webkit-transition: .5s ease-in-out;
            -moz-transition: .5s ease-in-out;
            -o-transition: .5s ease-in-out;
            transition: .5s ease-in-out;
        }

            /* Provides part of the "X" to eliminate an image from the close link */

            a.lightbox-close:before {
                content: "";
                display: block;
                height: 30px;
                width: 1px;
                background: black;
                position: absolute;
                left: 26px;
                top: 10px;
                -webkit-transform: rotate(45deg);
                -moz-transform: rotate(45deg);
                -o-transform: rotate(45deg);
                transform: rotate(45deg);
            }

            /* Provides part of the "X" to eliminate an image from the close link */

            a.lightbox-close:after {
                content: "";
                display: block;
                height: 30px;
                width: 1px;
                background: black;
                position: absolute;
                left: 26px;
                top: 10px;
                -webkit-transform: rotate(-45deg);
                -moz-transform: rotate(-45deg);
                -o-transform: rotate(-45deg);
                transform: rotate(-45deg);
            }

        /* Uses the :target pseudo-class to perform the animations upon clicking the .lightbox-target anchor */

        .lightbox-target:target {
            opacity: 1;
            top: 52px;
            bottom: 0;
            overflow: scroll;
        }

            .lightbox-target:target img {
                max-height: 100%;
                max-width: 100%;
            }

            .lightbox-target:target a.lightbox-close {
                top: 0;
            }
    </style>
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @*@HtmlExtensions.CreateButton(CurrentArea, CurrentController)
            @HtmlExtensions.ExportButton(CurrentArea, CurrentController)
            @HtmlExtensions.ImportButton(CurrentArea, CurrentController)*@
    </div>
</div>
@Html.Hidden("TemplateId", null, new { value = templateId })

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm("_Search", null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                {
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.Customer)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.Customer, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.VBELN)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.VBELN, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.isOpen)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("isOpen", new List<SelectListItem>(){
                                                        new SelectListItem(){Text = LanguageResource.Dropdownlist_All, Value = "" , Selected = Model != null && !Model.isOpen.HasValue ? true : false},
                                                        new SelectListItem(){Text = "Đang mở", Value = "true", Selected = Model == null ? true : false},
                                                        new SelectListItem(){Text =  "Đã đóng", Value = "false"}
                                                    }, new { @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Ngày KTĐC</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("CommonDate", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Completed", @id = "created-date", Name = "CreatedCommonDate" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Completed">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.CompletedFromDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.CompletedFromDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.CompletedToDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.CompletedToDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Ngày giao hàng</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("CommonDate2", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Delivery", @id = "delivery-date", Name = "DeliveryDate" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Delivery">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.DeliveryFromDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.DeliveryFromDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.DeliveryToDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.RequiredTextboxFor(p => p.DeliveryToDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*<div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <div class="label-wrapper">
                                                <label class="control-label">Xem theo SL dòng</label>
                                            </div>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownList("TopRow", null, null, new { @class = "form-control with-search" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <div class="label-wrapper">
                                                <label class="control-label">Freeze Column</label>
                                            </div>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownList("FreezeColumn", null, null, new { @class = "form-control with-search" })
                                        </div>
                                    </div>
                                </div>
                            </div>*@


                        <div id="frm-button" class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-6 col-md-offset-3 input-group">

                                    <select id="SearchTemplateId" name="SearchTemplateId">
                                        <option value="">@LanguageResource.Dropdownlist_RecentSearch</option>
                                    </select>
                                    <span class="input-group-btn" style="padding-right:25px;padding-left: 10px;">
                                        <a href="#" class="btn btn-delete-frmSearch display-none" style="color: coral;" title="Xoá mẫu tìm kiếm"><i class="fa fa-trash-o fa-lg" aria-hidden="true"></i></a>
                                        <a href="#" class="btn btn-save-frmSearch" title="Lưu mẫu tìm kiếm"><i class="fa fa-thumb-tack fa-lg" aria-hidden="true"></i></a>
                                    </span>
                                    <a href="#" id="btn-view" class="btn btn-primary" style="margin-left: 10px;"><i class="fa fa-refresh"></i> Chạy báo cáo</a>&nbsp;
                                    @*<a href="#" class="btn btn-success" id="btn-export"><i class="fa fa-download"></i> Export</a>*@
                                    @*@HtmlExtensions.ExportReportButton(CurrentArea, CurrentController)*@
                                    @*<a id="btn-export-pivot" class="btn btn-success btn-export" href="#"><i class="fa fa-download"></i> Export Excel</a>*@
                                </div>
                            </div>
                        </div>
                        @*<div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-5">
                                        @HtmlExtensions.SearchButton()
                                        <a href="#" class="btn btn-primary report-bom-detail">Báo cáo tổng hợp</a>
                                    </div>
                                </div>
                            </div>*@
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="form-horizontal" id="report-content">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="dropdown pull-right" style="padding-top:5px; padding-right: 5px;">
                    @Html.Partial("~/Areas/Reports/Views/_PivotTemplateHandle.cshtml")
                </div>

                <div class="panel-body">
                    @*<script type="text/javascript">
                            function OnBeginGridCallback(s, e) {
                                e.customArgs = MVCxClientUtils.GetSerializedEditorValuesInContainer("options");
                            }
                        </script>*@
                    <div id="grid" style="overflow: auto;">
                        <form>
                            @Html.Action("BC07ReportPartial", new { searchViewModel = ViewBag.Search, templateId = ViewBag.TemplateId })
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="delete-confirm"></div>
<div class="loading-modal"></div>
<div class="zoom-img-modal"></div>
@section components {
    <div id="popupSaveTemplate" class="modal fade" role="dialog">
        @Html.Partial("~/Areas/Reports/Views/_SaveTemplatePopup.cshtml")
    </div>
}

@section jquery {
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Content/jquery-ui.js"></script>
}
@section scripts {
    <script src="~/Scripts/Common/ISD.SearchTemplate.js"></script>
    <script src="~/Scripts/Common/PivotTemplate.js"></script>
    <script>
	    //Define it
	    var currentUserId = "@CurrentUser.AccountId";
	    var currentPageId = "@ViewBag.PageId";
    </script>
    <script>
    //load default and set event
    $(document).ready(function () {
        var modeTemplateSearch = "@modeSearch";

        if (modeTemplateSearch == "Recently") {
            LoadTemplateSearch(currentUserId, currentPageId, "Recently");
            var recentSearch = JSON.parse(localStorage.getItem('pageId-' + currentPageId));
            if (recentSearch) {
                FillToInput(recentSearch);
            }
        }
        else {
            LoadTemplateSearch(currentUserId, currentPageId);
            localStorage.removeItem('pageId-' + currentPageId)
        }
        ISDPivotTemplate.Init("@CurrentUrl", "@CurrentController");
        //load thông tin ngày
        var createdCommonDate = $('select[name="CreatedCommonDate"]').val();
        var CompletedFromDate = $('select[name="CompletedFromDate"]').val();
        var CompletedToDate = $('select[name="CompletedToDate"]').val();
        if (createdCommonDate && (createdCommonDate !== "Custom" || CompletedFromDate || CompletedToDate)) {
            $('select[name="CreatedCommonDate"]').trigger('change');
        }
    });
    var currentIndex = 1;
    $(document).on("click", "#btn-export", function () {
        var $btn = $(this);
        $btn.button("loading");
        var arr = {};
        var data = $("#frmSearch").serializeArray();
        var obj = {};
        $.each(data, function (index, val) {
            obj[val.name] = val.value;
            $.extend(true, arr, obj)
        });
        obj["TemplateId"] = $('#TemplateId').val();
        $.extend(true, arr, obj);
        //Save localStorage
        localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
        // ExportPivotGrid(arr);
        ISD.Download("/@CurrentUrl/ExportPivot", arr);
        $btn.button("reset");
    });
    $(document).on("click", "#btn-view", function () {
        var $btn = $(this);
        $btn.button("loading")
        var arr = {};
        var data = $("#frmSearch").serializeArray();

        var obj = {};
        $.each(data, function (index, val) {
            obj[val.name] = val.value;
            $.extend(true, arr, obj)
        });
        obj["IsView"] = true;
        $.extend(true, arr, obj);
        obj["pivotTemplate"] = $('#TemplateId').val();
        obj["modeSearch"] = "Recently";
        $.extend(true, arr, obj);
        //SO Number
        var VBELNList = $('#VBELNList').val();
        if (VBELNList != null && VBELNList.length > 0) {
            var department = {};
            department['VBELNList'] = VBELNList;
            $.extend(true, arr, department);
        }
        //Save localStorage
        localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
        ISD.Download("/@CurrentUrl/ViewDetail", arr);
    });
    $(document).off("click", ".pivot-template-item").on("click", ".pivot-template-item", function () {
        var $btn = $(this);
        var arr = {};
        var data = $("#frmSearch").serializeArray();

        var obj = {};
        $.each(data, function (index, val) {
            obj[val.name] = val.value;
            $.extend(true, arr, obj)
        });
        obj["IsView"] = true;
        obj["modeSearch"] = "Recently";
        $.extend(true, arr, obj);
        var templateId = $(this).data('id');
        obj["pivotTemplate"] = templateId;
        $.extend(true, arr, obj);
        localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
        ISD.Download("/@CurrentUrl/ChangeTemplate", arr);
    });
    </script>
    <script>
        //Get data of form search name function is required
        function GetDataFormSearch() {
            //Get value in search form
            var formdata = $("#frmSearch").serializeArray();
            var data = {};
            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });
            return JSON.stringify(data);
        }
        //Fill data to form search name function is required
        function FillToInputSpecial(recentSearch) {
            if (recentSearch.SearchProfileId != "") {
                $("#SearchProfileCode").val(recentSearch.SearchProfileCodeRecent);
                $("#SearchProfileName").val(recentSearch.SearchProfileNameRecent);
                $("#SearchProfileCode").prop("disabled", true);
            }
            if (recentSearch.SearchProductId != "") {
                $("#ProductCode").val(recentSearch.SearchProductCodeRecent);
                $("#ProductName").val(recentSearch.SearchProductNameRecent);
                $("#ProductCode").prop("disabled", true);
            }
        }
        //common date
        $(document).on("change", ".ddl-common-date", function () {
            var cssClass = $(this).data('id');
            var commonDate = $(this).val();
            $.ajax({
                type: "POST",
                url: "/Utilities/CommonDate/Get",
                data: {
                    CommonDate: commonDate
                },
                success: function (jsonData) {
                    $("." + cssClass + " input[name='" + cssClass + "FromDate']").val(jsonData.FromDate);
                    $("." + cssClass + " input[name='" + cssClass + "ToDate']").val(jsonData.ToDate);
                    if (jsonData.FromDate != '' && jsonData.FromDate != '') {
                        $("." + cssClass + " input[name='" + cssClass + "FromDate']").prop("readonly", true);
                        $("." + cssClass + " input[name='" + cssClass + "ToDate']").prop("readonly", true);
                    } else {
                        $("." + cssClass + " input[name='" + cssClass + "FromDate']").prop("readonly", false);
                        $("." + cssClass + " input[name='" + cssClass + "ToDate']").prop("readonly", false);
                    }

                }
            });
        });

        $(document).on("change", "#StoreId", function () {
            var Id = $(this).data('id');
            $.ajax({
                type: "GET",
                url: "/Reports/BC07Report/_LoadWorkShopBy?StoreId=" + Id,
                success: function (html) {
                    $('.work-shop-list').html(html);
                }
            });
        });


        // Export Excel
        $(document).on("click", "#btn-export-pivot", function () {
            var $btn = $(this);
            $btn.button("loading");
            var arr = {};
            var data = $("#frmSearch").serializeArray();

            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["TemplateId"] = $('#TemplateId').val();
            $.extend(true, arr, obj);
            //SO Number
            var VBELNList = $('#VBELNList').val();
            if (VBELNList != null && VBELNList.length > 0) {
                var department = {};
                department['VBELNList'] = VBELNList;
                $.extend(true, arr, department);
            }
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ExportPivot", arr);
            $btn.button("reset");
        });
        $("#frmSearch").bind('ajax:complete', function () {

            $("#btn-export-pivot").button('reset');

            $("#report-content").show();

        });

        $('.dxpgCell_MaterialCompact, .dxpgRowFieldValue_MaterialCompact').each(function (index, val) {
            if ($(this).text() === '0.000') {
                $(this).html('');
            }
            else if ($(this).text() === 'dd/MM/yyyy') {
                $(this).html('');
            }
        });

        $(document).on('DOMSubtreeModified', '#grid', function () {
            loadImage();
        });
        //Hiển thị hình ảnh
        function loadImage() {
            $(".dxgvDataRow_MaterialCompact .dxgv").each(function (index) {
                if ($(this).text().indexOf('img') > -1 && $(this).html().indexOf('&lt;') > -1) {
                    var img = $(this).text().replace('&lt;', '<').replace('&gt;', '>');
                    var imgDiv = "<a class=\"lightbox\" href=\"#zoom-img-" + index + "\">" + img + "</a>";
                    var imgZoomDiv = "<div class=\"lightbox-target\" id=\"zoom-img-" + index + "\">" +
                        img.replace("style=\"width: 50px; height: 50px;\"", "") +
                        "<a class=\"lightbox-close\" href=\"#\"></a>" +
                        "</div>";
                    $(".zoom-img-modal #zoom-img-" + index).remove();
                    $(".zoom-img-modal").append(imgZoomDiv);
                    $(this).html(imgDiv);
                    $(this).attr('style', 'text-align: center; padding: 0 0 0 4px;');
                }
            });
        }
    </script>
}
