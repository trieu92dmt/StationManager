@using Newtonsoft.Json;
@using Reports.Options;
@using System.Drawing;
@using ISD.Repositories;

@model IEnumerable<BC16ReportViewModel>

@{
    var pivotSetting = (List<FieldSettingModel>)ViewBag.PivotSetting;
    var search = (BC16ReportViewModel)ViewBag.Search;
    int NumberOfFreezeColumn = 5;
    UtilitiesRepository repo = new UtilitiesRepository();
    string fileName = repo.RemoveSign4VietnameseString(LanguageResource.BC16Report.ToUpper()).Replace(" ", "_").Replace("/", "_");
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    //4 công đoạn lớn
    string Step1Code = (string)ViewBag.Step1Code;
    string Step2Code = (string)ViewBag.Step2Code;
    string Step3Code = (string)ViewBag.Step3Code;
    string Step4Code = (string)ViewBag.Step4Code;
    //Danh sách công đoạn con
    var StepList = (List<RoutingViewModel>)ViewBag.StepList;
}

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gridViewBC16";
    settings.KeyFieldName = "BC01Id";
    settings.Width = Unit.Percentage(100);
    settings.CallbackRouteValues = new { Controller = "BC16Report", Action = "BC16Partial", jsonReq = JsonConvert.SerializeObject(search) };
    //settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "BC16Report", Action = "BatchEditingUpdateModel" };

    //Command Column: CRUD
    settings.CommandColumn.Visible = false;
    /*
    //settings.CommandColumn.ShowCancelButton = true;
    //settings.CommandColumn.ShowDeleteButton = true;
    //settings.CommandColumn.ShowNewButtonInHeader = false;
    //settings.CommandColumn.ShowNewButton = true;
    settings.CommandColumn.Width = Unit.Pixel(90);
    settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
    settings.CommandColumn.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    //Button sửa
    settings.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton() { ID = "btn-edit-row", Text = "Sửa" });
    settings.ClientSideEvents.CustomButtonClick = "function(s, e) {{ if(e.buttonID == 'btn-edit-row') { handleEditReportModalPopup(s, e) } }}";
    */
    //Fixed Column
    settings.Styles.FixedColumn.BackColor = Color.LightYellow;
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;

    //Fixed Header
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
    settings.Settings.VerticalScrollableHeight = 500;

    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;

    //Paging
    //settings.SettingsPager.Position = PagerPosition.TopAndBottom;
    //settings.SettingsPager.FirstPageButton.Visible = true;
    //settings.SettingsPager.LastPageButton.Visible = true;
    //settings.SettingsPager.PageSizeItemSettings.Visible = true;
    //settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50", "100", "200" };

    //settings.Columns.Add(c =>
    //{
    //    c.FieldName = "WorkShopName";
    //    c.Width = Unit.Pixel(150);
    //    c.ExportWidth = 150;
    //    c.Caption = "Phân xưởng";
    //    c.ReadOnly = true;
    //    //c.EditorProperties().SpinEdit(p =>
    //    //{
    //    //    p.DisplayFormatString = "n2";
    //    //});
    //    //c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
    //    //c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
    //    if (NumberOfFreezeColumn > 0)
    //    {
    //        c.FixedStyle = GridViewColumnFixedStyle.Left;
    //    }
    //});

    settings.Columns.Add(c =>
    {
        c.FieldName = "LSXSAP";
        c.Width = Unit.Pixel(100);
        c.ExportWidth = 100;
        c.Caption = "LSX SAP";
        c.ReadOnly = true;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        if (NumberOfFreezeColumn > 1)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "LSX";
        c.Width = Unit.Pixel(200);
        c.ExportWidth = 200;
        c.Caption = "LSXĐT đợt";
        c.ReadOnly = true;
        if (NumberOfFreezeColumn > 2)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "ProductCode";
        c.Width = Unit.Pixel(100);
        c.ExportWidth = 100;
        c.Caption = "Mã SP";
        c.ReadOnly = true;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        if (NumberOfFreezeColumn > 3)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "ProductName";
        c.Width = Unit.Pixel(200);
        c.ExportWidth = 200;
        c.Caption = "Tên SP";
        c.ReadOnly = true;
        if (NumberOfFreezeColumn > 4)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "ProductAttributes";
        c.Width = Unit.Pixel(90);
        c.ExportWidth = 90;
        c.Caption = "STT";
        c.ReadOnly = true;
        if (NumberOfFreezeColumn > 5)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "ProductAttributesName";
        c.Width = Unit.Pixel(200);
        c.ExportWidth = 200;
        c.Caption = "Tên chi tiết";
        c.ReadOnly = true;
        if (NumberOfFreezeColumn > 6)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "MaterialCode";
        c.Width = Unit.Pixel(100);
        c.ExportWidth = 100;
        c.Caption = "Mã SAP";
        c.ReadOnly = true;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        if (NumberOfFreezeColumn > 7)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "MaterialName";
        c.Width = Unit.Pixel(200);
        c.ExportWidth = 200;
        c.Caption = "Nguyên liệu";
        c.ReadOnly = true;
        if (NumberOfFreezeColumn > 8)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "DVT";
        c.Width = Unit.Pixel(90);
        c.ExportWidth = 90;
        c.Caption = "ĐVT";
        c.ReadOnly = true;
        if (NumberOfFreezeColumn > 9)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "SLCTKH";
        c.Width = Unit.Pixel(100);
        c.ExportWidth = 100;
        c.Caption = "SL chi tiết/SP";
        c.ReadOnly = true;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
        c.PropertiesEdit.DisplayFormatString = "n0";
        if (NumberOfFreezeColumn > 10)
        {
            c.FixedStyle = GridViewColumnFixedStyle.Left;
        }
    });

    settings.Columns.AddBand(orderBand =>
    {
        orderBand.Caption = "Quy cách tinh(mm)";

        orderBand.Columns.Add(c =>
        {
            c.FieldName = "P1";
            c.Width = Unit.Pixel(80);
            c.ExportWidth = 80;
            c.Caption = "Dày";
            c.ReadOnly = true;
            c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
            c.PropertiesEdit.DisplayFormatString = "n0";
        });
        orderBand.Columns.Add(c =>
        {
            c.FieldName = "P2";
            c.Width = Unit.Pixel(80);
            c.ExportWidth = 80;
            c.Caption = "Rộng";
            c.ReadOnly = true;
            c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
            c.PropertiesEdit.DisplayFormatString = "n0";
        });
        orderBand.Columns.Add(c =>
        {
            c.FieldName = "P3";
            c.Width = Unit.Pixel(80);
            c.ExportWidth = 80;
            c.Caption = "Dài";
            c.ReadOnly = true;
            c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
            c.PropertiesEdit.DisplayFormatString = "n0";
        });
        orderBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "TheTich";
        c.Width = Unit.Pixel(80);
        c.ExportWidth = 80;
        c.Caption = "V(m3)";
        c.ReadOnly = true;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
        c.PropertiesEdit.DisplayFormatString = "n3";
    });

    //settings.Columns.Add(c =>
    //{
    //    c.FieldName = "SLKH";
    //    c.Width = Unit.Pixel(80);
    //    c.ExportWidth = 80;
    //    c.Caption = "SL sản phẩm theo LSX";
    //    c.ReadOnly = true;
    //    c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
    //    c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
    //    c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
    //    c.PropertiesEdit.DisplayFormatString = "n0";
    //});

    settings.Columns.Add(c =>
    {
        c.FieldName = "SLCTKHTheoSP";
        c.Width = Unit.Pixel(80);
        c.ExportWidth = 80;
        c.Caption = "SLCTKH";
        c.ReadOnly = true;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
        c.PropertiesEdit.DisplayFormatString = "n0";
    });

    //CĐL1
    settings.Columns.AddBand(orderBand =>
    {
        orderBand.Caption = Step1Code;
        orderBand.HeaderStyle.BackColor = ColorTranslator.FromHtml("#CCC0DA");
        var stepLst = StepList.Where(p => p.WorkCenter == Step1Code).ToList();
        if (stepLst != null && stepLst.Count() > 0)
        {
            for (int i = 1; i <= stepLst.Count(); i++)
            {
                var backColor = (stepLst[i - 1].OrderIndex / 10) % 2 == 0 ? ColorTranslator.FromHtml("#DDEBF7") : ColorTranslator.FromHtml("#C6EFCE");
                orderBand.Columns.AddBand(orderBandItem =>
                {
                    orderBandItem.Caption = stepLst[i - 1].StepName;
                    orderBandItem.HeaderStyle.BackColor = backColor;

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLKH" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLKH";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLHT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLHT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLCL" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SL Thiếu";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_NCTT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "Số phút NCTT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n3";
                        c.HeaderStyle.BackColor = backColor;
                    });
                    orderBandItem.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                });
            }
        }

        orderBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    //CĐL2
    settings.Columns.AddBand(orderBand =>
    {
        orderBand.Caption = Step2Code;
        orderBand.HeaderStyle.BackColor = ColorTranslator.FromHtml("#D9D9D9");
        var stepLst = StepList.Where(p => p.WorkCenter == Step2Code).ToList();
        if (stepLst != null && stepLst.Count() > 0)
        {
            for (int i = 1; i <= stepLst.Count(); i++)
            {
                var backColor = (stepLst[i - 1].OrderIndex / 10) % 2 == 0 ? ColorTranslator.FromHtml("#DDEBF7") : ColorTranslator.FromHtml("#C6EFCE");
                orderBand.Columns.AddBand(orderBandItem =>
                {
                    orderBandItem.Caption = stepLst[i - 1].StepName;
                    orderBandItem.HeaderStyle.BackColor = backColor;

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLKH" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLKH";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLHT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLHT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLCL" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SL Thiếu";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_NCTT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "Số phút NCTT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n3";
                        c.HeaderStyle.BackColor = backColor;
                    });
                    orderBandItem.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                });
            }
        }

        orderBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    //CĐL3
    settings.Columns.AddBand(orderBand =>
    {
        orderBand.Caption = Step3Code;
        orderBand.HeaderStyle.BackColor = ColorTranslator.FromHtml("#CCC0DA");
        var stepLst = StepList.Where(p => p.WorkCenter == Step3Code).ToList();
        if (stepLst != null && stepLst.Count() > 0)
        {
            for (int i = 1; i <= stepLst.Count(); i++)
            {
                var backColor = (stepLst[i - 1].OrderIndex / 10) % 2 == 0 ? ColorTranslator.FromHtml("#DDEBF7") : ColorTranslator.FromHtml("#C6EFCE");
                orderBand.Columns.AddBand(orderBandItem =>
                {
                    orderBandItem.Caption = stepLst[i - 1].StepName;
                    orderBandItem.HeaderStyle.BackColor = backColor;

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLKH" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLKH";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLHT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLHT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLCL" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SL Thiếu";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_NCTT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "Số phút NCTT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n3";
                        c.HeaderStyle.BackColor = backColor;
                    });
                    orderBandItem.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                });
            }
        }

        orderBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    //CĐL4
    settings.Columns.AddBand(orderBand =>
    {
        orderBand.Caption = Step4Code;
        orderBand.HeaderStyle.BackColor = ColorTranslator.FromHtml("#D9D9D9");
        var stepLst = StepList.Where(p => p.WorkCenter == Step4Code).ToList();
        if (stepLst != null && stepLst.Count() > 0)
        {
            for (int i = 1; i <= stepLst.Count(); i++)
            {
                var backColor = (stepLst[i - 1].OrderIndex / 10) % 2 == 0 ? ColorTranslator.FromHtml("#DDEBF7") : ColorTranslator.FromHtml("#C6EFCE");
                orderBand.Columns.AddBand(orderBandItem =>
                {
                    orderBandItem.Caption = stepLst[i - 1].StepName;
                    orderBandItem.HeaderStyle.BackColor = backColor;

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLKH" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLKH";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLHT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SLHT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_SLCL" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "SL Thiếu";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n0";
                        c.HeaderStyle.BackColor = backColor;
                    });

                    orderBandItem.Columns.Add(c =>
                    {
                        c.FieldName = "CD_NCTT" + (stepLst[i - 1].OrderIndex / 10).ToString().PadLeft(2, '0');
                        c.Width = Unit.Pixel(80);
                        c.ExportWidth = 80;
                        c.Caption = "Số phút NCTT";
                        c.ReadOnly = true;
                        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
                        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        c.PropertiesEdit.DisplayFormatString = "n3";
                        c.HeaderStyle.BackColor = backColor;
                    });
                    orderBandItem.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                });
            }
        }

        orderBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });
    settings.CellEditorInitialize = (s, e) =>
    {
        ASPxEdit editor = (ASPxEdit)e.Editor;
        editor.ValidationSettings.Display = Display.None;
    };
    settings.ClientSideEvents.BeginCallback = "OnBeginGridCallback";

    //Filter
    settings.Settings.ShowHeaderFilterButton = true;
    settings.SettingsPopup.HeaderFilter.Height = 200;
    settings.SettingsPopup.HeaderFilter.SettingsAdaptivity.MinHeight = 300;
    //var headerFilterMode = GridHeaderFilterMode.CheckedList;
    //foreach (GridViewDataColumn column in settings.Columns)
    //{
    //    column.SettingsHeaderFilter.Mode = headerFilterMode;
    //}

    //Export excel
    if (Model != null && Model.Count() > 0)
    {
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;

        settings.Toolbars.Add(t =>
        {
            t.SettingsAdaptivity.Enabled = true;
            t.SettingsAdaptivity.EnableCollapseRootItemsToIcons = true;
            t.Items.Add(GridViewToolbarCommand.ExportToXls);
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx);
        });

        //File name
        settings.SettingsExport.FileName = fileName;
        //Page header
        //settings.SettingsExport.ReportHeader = LanguageResource.BC16Report.ToUpper();
        settings.SettingsExport.PageHeader.Left = LanguageResource.BC16Report.ToUpper();
        settings.SettingsExport.PageHeader.Font.Size = 16;
        settings.SettingsExport.PageHeader.Font.Bold = true;
        //Column header
        settings.SettingsExport.Styles.Header.BackColor = ColorTranslator.FromHtml("#C6EFCE");
        settings.SettingsExport.Styles.Header.ForeColor = ColorTranslator.FromHtml("#000000");
        settings.SettingsExport.Styles.Header.Font.Size = 11;
        settings.SettingsExport.Styles.Header.Font.Bold = true;
        //Cell
        settings.SettingsExport.Styles.Cell.Font.Size = 11;
    }

    settings.Columns.Add(c =>
    {
        c.FieldName = "Total";
        c.Width = Unit.Pixel(80);
        c.ExportWidth = 80;
        c.Caption = "TỔNG CỘNG (PHÚT)";
        c.ReadOnly = true;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.ExportCellStyle.HorizontalAlign = HorizontalAlign.Right;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
        c.PropertiesEdit.DisplayFormatString = "n2";
    });


    Reports.Helpers.GridViewFeaturesHelper.SetupGlobalGridViewBehavior(settings);
}).Bind(Model).GetHtml()