@using Newtonsoft.Json;
@using System.Drawing;
@model IEnumerable<BC18_1ReportViewModel>
@{
    var pivotSetting = (List<FieldSettingModel>)ViewBag.PivotSetting;
    var search = (BC18_1ReportViewModel)ViewBag.Search;
}

@Html.DevExpress().PivotGrid(settings =>
{
    settings.Name = "BC18_1ReportPivotGrid";
    settings.CallbackRouteValues = new { Controller = "BC18_1Report", Action = "BC18_1ReportPivotGridPartial", jsonReq = JsonConvert.SerializeObject(search) };
    settings.Width = Unit.Percentage(100);
    settings.OptionsPager.RowsPerPage = 10;
    settings.OptionsPager.ColumnsPerPage = 100;
    settings.OptionsPager.PageSizeItemSettings.Visible = true;
    settings.OptionsCustomization.AllowDrag = true;
    settings.OptionsCustomization.AllowDragInCustomizationForm = true;
    settings.OptionsCustomization.AllowSort = false;
    //Grand total
    settings.OptionsView.ShowRowTotals = false;
    settings.OptionsView.ShowColumnGrandTotalHeader = false;
    settings.OptionsView.ShowColumnGrandTotals = false;
    settings.OptionsView.ShowRowGrandTotalHeader = false;
    settings.OptionsView.ShowRowGrandTotals = false;
    settings.OptionsView.ShowTotalsForSingleValues = false;
    settings.OptionsView.ShowGrandTotalsForSingleValues = false;
    settings.OptionsView.ShowCustomTotalsForSingleValues = false;
    //Scroll
    //settings.OptionsView.HorizontalScrollingMode = PivotScrollingMode.Virtual;
    //settings.OptionsView.HorizontalScrollBarMode = ScrollBarMode.Auto;
    //settings.OptionsView.VerticalScrollBarMode = ScrollBarMode.Auto;
    //settings.OptionsView.VerticalScrollingMode = PivotScrollingMode.Virtual;
    //settings.Height = Unit.Pixel(500);
    settings.AfterPerformCallback = (sender, e) =>
    {
        List<FieldSettingModel> fieldSettingList = new List<FieldSettingModel>();
        ASPxPivotGrid PivotGrid = sender as ASPxPivotGrid;
        var listField = PivotGrid.Fields;
        foreach (PivotGridField field in listField)
        {
            FieldSettingModel fieldSetting = new FieldSettingModel();
            fieldSetting.Caption = field.Caption;
            fieldSetting.AreaIndex = field.AreaIndex;
            fieldSetting.FieldName = field.FieldName;
            if (field.Area == PivotArea.RowArea)
            {
                fieldSetting.PivotArea = 0;

            }
            else
            {
                if (field.Area == PivotArea.ColumnArea)
                {
                    fieldSetting.PivotArea = 1;
                }
                else
                {
                    if (field.Area == PivotArea.FilterArea)
                    {
                        fieldSetting.PivotArea = 2;
                    }
                    else
                    {
                        fieldSetting.PivotArea = 3;
                    }
                }
            }
            if (field.ValueFormat.FormatType == FormatType.Numeric || field.ValueFormat.FormatType == FormatType.DateTime)
            {
                fieldSetting.CellFormat_FormatString = field.ValueFormat.FormatString;
                fieldSetting.CellFormat_FormatType = field.ValueFormat.FormatType.ToString();
            }
            if (field.FieldName == "TuoiTonWarning")
            {
                fieldSetting.SummaryType = PivotSummaryType.Min;
            }
            fieldSetting.Visible = field.Visible;
            fieldSettingList.Add(fieldSetting);
        }
        Session[CurrentUser.AccountId + "Layout"] = fieldSettingList;

    };

    //Set color for cell
    //settings.CustomCellStyle = (sender, e) =>
    //{
    //    if (e.DataField != null)
    //    {
    //        if (e.DataField.FieldName == "CompletedQuantity")
    //        {
    //            e.CellStyle.BorderLeft.BorderStyle = BorderStyle.Solid;
    //            e.CellStyle.BorderLeft.BorderWidth = Unit.Pixel(1);
    //            e.CellStyle.BorderLeft.BorderColor = Color.Red;
    //        }
    //        if (e.DataField.FieldName == "TuoiTonWarning")
    //        {
    //            e.CellStyle.BorderRight.BorderStyle = BorderStyle.Solid;
    //            e.CellStyle.BorderRight.BorderWidth = Unit.Pixel(1);
    //            e.CellStyle.BorderRight.BorderColor = Color.Red;
    //        }
    //    }
    //};


    if (pivotSetting != null && pivotSetting.Count > 0)
    {
        foreach (var fieldSetting in pivotSetting)
        {
            settings.Fields.Add(field =>
            {
                if (fieldSetting.PivotArea == 0)
                {
                    field.Area = PivotArea.RowArea;
                    field.Options.AllowExpand = DefaultBoolean.False;
                }
                if (fieldSetting.PivotArea == 1)
                {
                    field.Area = PivotArea.ColumnArea;
                }
                if (fieldSetting.PivotArea == 2)
                {
                    if (fieldSetting.AreaIndex > 10)
                    {
                        field.Visible = false;
                    }
                    field.Area = PivotArea.FilterArea;

                }
                if (fieldSetting.PivotArea == 3)
                {
                    field.Area = PivotArea.DataArea;
                }
                field.FieldName = fieldSetting.FieldName;
                field.Caption = fieldSetting.Caption;
                field.AreaIndex = fieldSetting.AreaIndex.Value;
                if (fieldSetting.CellFormat_FormatType == "DateTime")
                {
                    field.ValueFormat.FormatType = FormatType.DateTime;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.DateTime;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                }
                if (fieldSetting.CellFormat_FormatType == "Numeric")
                {
                    field.ValueFormat.FormatType = FormatType.Numeric;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.Numeric;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
                    field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                }
                field.Visible = fieldSetting.Visible.Value;
                if (fieldSetting.FieldName == "TuoiTonWarning")
                {
                    field.SummaryType = PivotSummaryType.Min;
                }
                if (fieldSetting.FieldName == "ImageUrl")
                {
                    field.CellStyle.BorderRight.BorderStyle = BorderStyle.Solid;
                    field.CellStyle.BorderRight.BorderWidth = Unit.Pixel(1);
                    field.CellStyle.BorderRight.BorderColor = Color.Red;
                }
                if (fieldSetting.Caption == "STT")
                {
                    field.ValueStyle.HorizontalAlign = HorizontalAlign.Center;
                    field.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                }
            });
        }
    }
    else // default
    {
        //Filter Area
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "OrderIndex";
            field.Caption = "STT";
            field.AreaIndex = 0;
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Center;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "SaleOrgCode";
            field.Caption = "Plant";
            field.AreaIndex = 1;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "STT";
            field.Caption = "STT (Mức độ ưu tiên)";
            field.AreaIndex = 2;
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Center;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        });
        //settings.Fields.Add(field =>
        //{
        //    field.Area = PivotArea.RowArea;
        //    field.FieldName = "WorkShop";
        //    field.Caption = "Phân xưởng";
        //    field.AreaIndex = 3;
        //});
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.ColumnArea;
            field.FieldName = "WorkCenter";
            field.Caption = "Công đoạn lớn";
            field.AreaIndex = 4;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "LSXSAP";
            field.Caption = "LSX SAP";
            field.AreaIndex = 5;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "DSX";
            field.Caption = "ĐSX";
            field.AreaIndex = 6;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "LSXDT";
            field.Caption = "LSX ĐT";
            field.AreaIndex = 7;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "ERPProductCode";
            field.Caption = "Mã SP";
            field.AreaIndex = 8;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "ProductName";
            field.Caption = "Tên SP";
            field.AreaIndex = 9;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "SLKH";
            field.Caption = "SL KH";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            field.AreaIndex = 15;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "ImageUrl";
            field.Caption = "Hình";
            field.AreaIndex = 16;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "CompletedQuantity";
            field.Caption = "SL HT";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            field.AreaIndex = 22;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "RemainingQuantity";
            field.Caption = "SL còn lại";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            field.AreaIndex = 24;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "PercentCompleted";
            field.Caption = "% HT";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:p0}";
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:p0}";
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Center;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            field.AreaIndex = 25;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "SLSPTon";
            field.Caption = "Tồn MX";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            field.AreaIndex = 26;
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "TuoiTonWarning";
            field.Caption = "Tuổi Tồn";
            //field.ValueFormat.FormatType = FormatType.Numeric;
            //field.ValueFormat.FormatString = "{0:n0}";
            //field.CellFormat.FormatType = FormatType.Numeric;
            //field.CellFormat.FormatString = "{0:n0}";
            //field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
            //field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            field.AreaIndex = 27;
            field.SummaryType = PivotSummaryType.Min;
        });

        //settings.Fields.Add(field =>
        //{
        //    field.FieldName = "TuoiTonWarning";
        //    field.Visible = false;
        //});

    }
}).Bind(Model).GetHtml()


