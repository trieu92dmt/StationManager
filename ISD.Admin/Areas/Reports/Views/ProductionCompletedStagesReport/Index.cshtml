@model ProductionCompletedStagesReportViewModel
@{
    Layout = "~/Views/Shared/_Layout_Report.cshtml";
    ViewBag.Title = LanguageResource.ProductionCompletedStagesReport;
    string CurrentController = ConstController.ProductionCompletedStageReport;
    string CurrentArea = ConstArea.Reports;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    bool isHasPermissionEdit = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Edit);
    var listSystemTemplate = (List<PivotTemplateViewModel>)ViewBag.SystemTemplate;
    var listUserTemplate = (List<PivotTemplateViewModel>)ViewBag.UserTemplate;
    var templateId = ViewBag.TemplateId;
    var modeSearch = ViewBag.ModeSearch;
    ViewBag.CurrentUrl = CurrentUrl;
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @*@HtmlExtensions.CreateButton(CurrentArea, CurrentController)
            @HtmlExtensions.ExportButton(CurrentArea, CurrentController)
            @HtmlExtensions.ImportButton(CurrentArea, CurrentController)*@
    </div>
</div>
@Html.Hidden("TemplateId", null, new { value = templateId })
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm("_Search", null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <div class="label-wrapper">
                                        <label class="control-label">Công đoạn</label>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    @Html.DropDownList("Actived", new List<SelectListItem>(){
                                         new SelectListItem(){Text = LanguageResource.Dropdownlist_All, Value = "", Selected = true},
                                         new SelectListItem(){Text = LanguageResource.SC, Value = "SC"},
                                         new SelectListItem(){Text = LanguageResource.TC, Value = "TC"},
                                         new SelectListItem(){Text = LanguageResource.RAP, Value = "RAP"},
                                         new SelectListItem(){Text = LanguageResource.HT, Value = "HT"}
                                     }, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <div class="label-wrapper">
                                        <label class="control-label">@LanguageResource.Reports_DateCompleted</label>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    @Html.DropDownList("CommonDate", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Completed", @id = "created-date", Name = "CreatedCommonDate" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Completed">
                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.TooltipLabelFor(p => p.CompletedFromDate)
                                </div>
                                <div class="col-md-8">
                                    @Html.RequiredTextboxFor(p => p.CompletedFromDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.TooltipLabelFor(p => p.CompletedToDate)
                                </div>
                                <div class="col-md-8">
                                    @Html.RequiredTextboxFor(p => p.CompletedToDate, "{0:yyyy-MM-dd}", new { type = "date" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="frm-button" class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-6 col-md-offset-3 input-group">

                                <select id="SearchTemplateId" name="SearchTemplateId">
                                    <option value="">@LanguageResource.Dropdownlist_RecentSearch</option>
                                </select>
                                <span class="input-group-btn" style="padding-right:25px;padding-left: 10px;">
                                    <a href="#" class="btn btn-delete-frmSearch display-none" style="color: coral;" title="Xoá mẫu tìm kiếm"><i class="fa fa-trash-o fa-lg" aria-hidden="true"></i></a>
                                    <a href="#" class="btn btn-save-frmSearch" title="Lưu mẫu tìm kiếm"><i class="fa fa-thumb-tack fa-lg" aria-hidden="true"></i></a>
                                </span>
                                <a href="#" id="btn-view" class="btn btn-primary" style="margin-left: 10px;"><i class="fa fa-refresh"></i> Chạy báo cáo</a>&nbsp;
                                @*<a href="#" class="btn btn-success" id="btn-export"><i class="fa fa-download"></i> Export</a>*@
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-12">
            <div class="form-group">
                <div class="col-md-8 col-md-offset-5">
                    @HtmlExtensions.SearchButton()
                    <a href="#" class="btn btn-primary report-bom-detail">Báo cáo tổng hợp</a>
                </div>
            </div>
        </div>*@
                </div>
                }
            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="dropdown pull-right" style="padding-top:5px; padding-right: 5px;">
                    @Html.Partial("~/Areas/Reports/Views/_PivotTemplateHandle.cshtml")
                </div>
                <div class="panel-body" style="overflow-x:scroll;">

                    @Html.Action("ProductionCompletedStagesReportPivotGridPartial", new { searchViewModel = ViewBag.Search, templateId = ViewBag.TemplateId })
                </div>
            </div>
        </div>
    </div>
</div>

<div class="delete-confirm"></div>
<div class="loading-modal"></div>
@section components {
    <div id="popupSaveTemplate" class="modal fade" role="dialog">
        @Html.Partial("~/Areas/Reports/Views/_SaveTemplatePopup.cshtml")
    </div>
    <div class="divProfilePopup"></div>
}
@section scripts {
    <script src="~/Scripts/Common/ISD.SearchTemplate.js"></script>
    <script src="~/Scripts/Common/PivotTemplate.js"></script>
    <script>
	//Define it
	var currentUserId = "@CurrentUser.AccountId";
	var currentPageId = "@ViewBag.PageId";
    </script>
    <script>
        //load default and set event
        $(document).ready(function () {
            var modeTemplateSearch = "@modeSearch";

            if (modeTemplateSearch == "Recently") {
                LoadTemplateSearch(currentUserId, currentPageId, "Recently");
                var recentSearch = JSON.parse(localStorage.getItem('pageId-' + currentPageId));
                if (recentSearch) {
                    FillToInput(recentSearch);
                }
            }
            else {
                LoadTemplateSearch(currentUserId, currentPageId);
                localStorage.removeItem('pageId-' + currentPageId)
            }
            ISDPivotTemplate.Init("@CurrentUrl","@CurrentController");
        });
        var currentIndex = 1;
        $(document).on("click", "#btn-export", function () {
            var $btn = $(this);
            var arr = {};
            var data = $("#frmSearch").serializeArray();
            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["TemplateId"] = $('#TemplateId').val();
            $.extend(true, arr, obj);
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
           // ExportPivotGrid(arr);
            ISD.Download("/@CurrentUrl/ExportPivot", arr);
            $btn.button("reset");
        });
             $(document).on("click", "#btn-view", function () {
                 var $btn = $(this);
                 $btn.button("loading")
                 var arr = {};
                 var data = $("#frmSearch").serializeArray();

                 var obj = {};
                 $.each(data, function (index, val) {
                     obj[val.name] = val.value;
                     $.extend(true, arr, obj)
                 });
                 obj["IsView"] = true;
                 $.extend(true, arr, obj);
                 obj["pivotTemplate"] = $('#TemplateId').val();
                 obj["modeSearch"] = "Recently";
                 $.extend(true, arr, obj);
  
                 //Save localStorage
                 localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
                 ISD.Download("/@CurrentUrl/ViewDetail", arr);
            });
            $(document).off("click", ".pivot-template-item").on("click", ".pivot-template-item", function () {
                var $btn = $(this);
                 var arr = {};
                 var data = $("#frmSearch").serializeArray();

                 var obj = {};
                 $.each(data, function (index, val) {
                     obj[val.name] = val.value;
                     $.extend(true, arr, obj)
                 });
                obj["IsView"] = true;
                obj["modeSearch"] = "Recently";
                $.extend(true, arr, obj);
                var templateId = $(this).data('id');
                obj["pivotTemplate"] = templateId;
                $.extend(true, arr, obj);
                 localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
                ISD.Download("/@CurrentUrl/ChangeTemplate", arr);
            });
    </script>
    <script>
        //Get data of form search name function is required
        function GetDataFormSearch() {
            //Get value in search form
            var formdata = $("#frmSearch").serializeArray();
            var data = {};
            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });
            return JSON.stringify(data);
        }

        //common date
        $(document).on("change", ".ddl-common-date", function () {
            var cssClass = $(this).data('id');
            var commonDate = $(this).val();
            $.ajax({
                type: "POST",
                url: "/Utilities/CommonDate/Get",
                data: {
                    CommonDate: commonDate
                },
                success: function (jsonData) {
                    $("." + cssClass + " input[name='" + cssClass + "FromDate']").val(jsonData.FromDate);
                    $("." + cssClass + " input[name='" + cssClass + "ToDate']").val(jsonData.ToDate);
                    if (jsonData.FromDate != '' && jsonData.FromDate != '') {
                        $("." + cssClass + " input[name='" + cssClass + "FromDate']").prop("disabled", true);
                        $("." + cssClass + " input[name='" + cssClass + "ToDate']").prop("disabled", true);
                    } else {
                        $("." + cssClass + " input[name='" + cssClass + "FromDate']").prop("disabled", false);
                        $("." + cssClass + " input[name='" + cssClass + "ToDate']").prop("disabled", false);
                    }

                }
            });
        });
    </script>

}
