@model SO100ReportViewModel
@{
    Layout = "~/Views/Shared/_Layout_Report.cshtml";
    ViewBag.Title = LanguageResource.SO100Report;
    string CurrentController = ConstController.SO100Report;
    string CurrentArea = ConstArea.Reports;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    bool isHasPermissionEdit = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Edit);
    var listSystemTemplate = (List<PivotTemplateViewModel>)ViewBag.SystemTemplate;
    var listUserTemplate = (List<PivotTemplateViewModel>)ViewBag.UserTemplate;
    var templateId = ViewBag.TemplateId;
    var modeSearch = ViewBag.ModeSearch;
    ViewBag.CurrentUrl = CurrentUrl;
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @*@HtmlExtensions.CreateButton(CurrentArea, CurrentController)
            @HtmlExtensions.ExportButton(CurrentArea, CurrentController)
            @HtmlExtensions.ImportButton(CurrentArea, CurrentController)*@
    </div>
</div>
@Html.Hidden("TemplateId", null, new { value = templateId })
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm("_Search", null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                {
                    <div class="panel-body">

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.VBELN)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.VBELN, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.AUART)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.AUART, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Document Date</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("CommonDate", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Document_Date_" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="row Start">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Document_Date_From)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Document_Date_From, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Document_Date_To)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Document_Date_To, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label">Created on</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("CommonDate2", null, new { @class = "form-control with-search ddl-common-date", @data_id = "Created_On_" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="row Start">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Created_On_From)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Created_On_From, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Created_On_To)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.RequiredTextboxFor(p => p.Created_On_To, "{0:yyyy-MM-dd}", new { type = "date" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.LSXDT)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.LSXDT, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.PYCSXDT)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.PYCSXDT, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.DSX)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.DSX, new { @class = "form-control text-box single-line" })
                                            @Html.HiddenFor(p => p.DSXId)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            @Html.TooltipLabelFor(p => p.LSXSAP)
                                        </div>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(p => p.LSXSAP, new { @class = "form-control text-box single-line" })
                                        </div>
                                    </div>
                                </div>*@

                        </div>



                        <div id="frm-button" class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-6 col-md-offset-3 input-group">

                                    <select id="SearchTemplateId" name="SearchTemplateId">
                                        <option value="">@LanguageResource.Dropdownlist_RecentSearch</option>
                                    </select>
                                    <span class="input-group-btn" style="padding-right:25px;padding-left: 10px;">
                                        <a href="#" class="btn btn-delete-frmSearch display-none" style="color: coral;" title="Xoá mẫu tìm kiếm"><i class="fa fa-trash-o fa-lg" aria-hidden="true"></i></a>
                                        <a href="#" class="btn btn-save-frmSearch" title="Lưu mẫu tìm kiếm"><i class="fa fa-thumb-tack fa-lg" aria-hidden="true"></i></a>
                                    </span>
                                    <a href="#" id="btn-view" class="btn btn-primary" style="margin-left: 10px;"><i class="fa fa-refresh"></i> Chạy báo cáo</a>&nbsp;
                                    <a href="#" class="btn btn-success" id="btn-export"><i class="fa fa-download"></i> Export</a>
                                </div>
                            </div>
                        </div>
                        @*<div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-5">
                                        @HtmlExtensions.SearchButton()
                                        <a href="#" class="btn btn-primary report-bom-detail">Báo cáo tổng hợp</a>
                                    </div>
                                </div>
                            </div>*@
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="dropdown pull-right" style="padding-top:5px; padding-right: 5px;">
                    @Html.Partial("~/Areas/Reports/Views/_PivotTemplateHandle.cshtml")
                </div>
                <div class="panel-body" style="overflow-x:scroll;">

                    @Html.Action("SO100ReportPivotGridPartial", new { searchViewModel = ViewBag.Search, templateId = ViewBag.TemplateId })
                </div>
            </div>
        </div>
    </div>
</div>

<div class="delete-confirm"></div>
<div class="loading-modal"></div>
@section components {
    <div id="popupSaveTemplate" class="modal fade" role="dialog">
        @Html.Partial("~/Areas/Reports/Views/_SaveTemplatePopup.cshtml")
    </div>
    <div class="divProfilePopup"></div>
}
@section jquery {
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Content/jquery-ui.js"></script>
}
@section scripts {
    <script src="~/Scripts/Common/ISD.SearchTemplate.js"></script>
    <script src="~/Scripts/Common/PivotTemplate.js"></script>
    <script>
	//Define it
	var currentUserId = "@CurrentUser.AccountId";
	var currentPageId = "@ViewBag.PageId";
    </script>
    <script>
        //load default and set event
        $(document).ready(function () {
            var modeTemplateSearch = "@modeSearch";

            if (modeTemplateSearch == "Recently") {
                LoadTemplateSearch(currentUserId, currentPageId, "Recently");
                var recentSearch = JSON.parse(localStorage.getItem('pageId-' + currentPageId));
                if (recentSearch) {
                    FillToInput(recentSearch);
                }
            }
            else {
                LoadTemplateSearch(currentUserId, currentPageId);
                localStorage.removeItem('pageId-' + currentPageId)
            }
            ISDPivotTemplate.Init("@CurrentUrl", "@CurrentController");
            //$(".ddl-common-date").trigger("change");
            inputAutoComplete();
        });
        var currentIndex = 1;
        $(document).on("click", "#btn-export", function () {
            var els = $('#frmSearch :input').filter(function () {
                return this.value !== "" && this.value !== "0";
            });
            if (els.length === 4) {
                alertPopup(false, "Vui lòng nhập ít nhất một điều kiện lọc!");
                return;
            }
            var $btn = $(this);
            $btn.button('loading');
            var arr = {};
            var data = $("#frmSearch").serializeArray();
            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["TemplateId"] = $('#TemplateId').val();
            $.extend(true, arr, obj);
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
           // ExportPivotGrid(arr);
            ISD.Download("/@CurrentUrl/ExportPivot", arr);
            $btn.button("reset");
        });
        $(document).on("click", "#btn-view", function () {
            var els = $('#frmSearch :input').filter(function () {
                return this.value !== "" && this.value !== "0";
            });
            if (els.length === 4) {
                alertPopup(false, "Vui lòng nhập ít nhất một điều kiện tìm!");
                return;
            }
            var $btn = $(this);
            $btn.button("loading");
            var arr = {};
            var data = $("#frmSearch").serializeArray();

            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["IsView"] = true;
            $.extend(true, arr, obj);
            obj["pivotTemplate"] = $('#TemplateId').val();
            obj["modeSearch"] = "Recently";
            $.extend(true, arr, obj);
            ////SO Number
            //var VBELNList = $('#VBELNList').val();
            //if (VBELNList != null && VBELNList.length > 0) {
            //    var department = {};
            //    department['VBELNList'] = VBELNList;
            //    $.extend(true, arr, department);
            //}
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ViewDetail", arr);
        });
        $(document).off("click", ".pivot-template-item").on("click", ".pivot-template-item", function () {
            var $btn = $(this);
                var arr = {};
                var data = $("#frmSearch").serializeArray();

                var obj = {};
                $.each(data, function (index, val) {
                    obj[val.name] = val.value;
                    $.extend(true, arr, obj)
                });
            obj["IsView"] = true;
            obj["modeSearch"] = "Recently";
            $.extend(true, arr, obj);
            var templateId = $(this).data('id');
            obj["pivotTemplate"] = templateId;
            $.extend(true, arr, obj);
                localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ChangeTemplate", arr);
        });
    </script>
    <script>
        //Get data of form search name function is required
        function GetDataFormSearch() {
            //Get value in search form
            var formdata = $("#frmSearch").serializeArray();
            var data = {};
            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });
            return JSON.stringify(data);
        }
        //Fill data to form search name function is required
        function FillToInputSpecial(recentSearch) {
            if (recentSearch.SearchProfileId != "") {
                $("#SearchProfileCode").val(recentSearch.SearchProfileCodeRecent);
                $("#SearchProfileName").val(recentSearch.SearchProfileNameRecent);
                $("#SearchProfileCode").prop("disabled", true);
            }
            if (recentSearch.SearchProductId != "") {
                $("#ProductCode").val(recentSearch.SearchProductCodeRecent);
                $("#ProductName").val(recentSearch.SearchProductNameRecent);
                $("#ProductCode").prop("disabled", true);
            }
        }
    </script>
    <script>
        $(document).on("change", ".ddl-common-date", function () {
            var inputName = $(this).data('id');
            var commonDate = $(this).val();
            $.ajax({
                type: "POST",
                url: "/Utilities/CommonDate/Get",
                data: {
                    CommonDate: commonDate
                },
                success: function (jsonData) {
                    $("input[name='" + inputName + "From']").val(jsonData.FromDate);
                    $("input[name='" + inputName + "To']").val(jsonData.ToDate);

                    if (jsonData.FromDate != '' && jsonData.ToDate != '') {
                        $("input[name='" + inputName + "From']").prop("readonly", true);
                        $("input[name='" + inputName + "To']").prop("readonly", true);
                    } else {
                        $("input[name='" + inputName + "From']").prop("readonly", false);
                        $("input[name='" + inputName + "To']").prop("readonly", false);
                    }

                }
            });
        });
        //autocomplete
        function inputAutoComplete() {
            //lệnh sản xuất đại trà
            $("#LSXDT").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/@CurrentUrl/SearchLSXDT",
                        data: JSON.stringify({ "SearchText": request.term }),
                        dataType: "json",
                        success: function (data) {
                            if (data.IsSuccess) {
                                response($.map(data.Data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                            else {
                                if (data.Message) {
                                    alertPopup(false, data.Message);
                                }
                            }
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                },
                autoFocus: true,
                //prevent another value except dropdown value
                //change: function (event, ui) {
                //    if (ui.item === null) {
                //        $("#ProductName").val("");
                //        $("#ProductId").val("");
                //        $("#Quantiny").val("");
                //        $("#ProductName").focus();
                //    }
                //},
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                }
            });
            //đợt sản xuất
            $("#DSX").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/@CurrentUrl/SearchLSXDByLSXDT",
                        data: JSON.stringify({ "SearchText": request.term, "LSXDT": $('input[name="LSXDT"]').val() }),
                        dataType: "json",
                        success: function (data) {
                            if (data.IsSuccess) {
                                response($.map(data.Data, function (item) {
                                    return { label: item.name, value: item.name, id: item.id };
                                }));
                            }
                            else {
                                if (data.Message) {
                                    alertPopup(false, data.Message);
                                }
                            }

                            //response(data);
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                },
                autoFocus: true,
                //prevent another value except dropdown value
                //change: function (event, ui) {
                //    if (ui.item === null) {
                //        $("#ProductName").val("");
                //        $("#ProductId").val("");
                //        $("#Quantiny").val("");
                //        $("#ProductName").focus();
                //    }
                //},
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    $('input[name="DSXId"]').val(ui.item.id);
                }
            });
             //lệnh sản xuất SAP
            $("#LSXSAP").autocomplete({
                source: function (request, response) {
                    var term = request.term;

                    // substring of new string (only when a comma is in string)
                    if (term.indexOf(', ') > 0) {
                        var index = term.lastIndexOf(', ');
                        term = term.substring(index + 2);
                    }

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/@CurrentUrl/SearchLSXCByLSXD",
                        data: JSON.stringify({ "SearchText": term, "LSXD": $('input[name="DSXId"]').val() }),
                        dataType: "json",
                        success: function (data) {
                            if (data.IsSuccess) {
                                //response($.map(data.Data, function (item) {
                                //    return { label: item.name, value: item.name, id: item.id };
                                //}));

                                var regex_validated_array = $.map(data.Data, function (item) {
                                    return { label: item.name, value: item.name, id: item.id };
                                });

                                 // pass array `regex_validated_array ` to the response and
                                // `extractLast()` which takes care of the comma separation
                                response($.ui.autocomplete.filter(regex_validated_array,
                                    extractLast(term)));
                            }
                            else {
                                if (data.Message) {
                                    alertPopup(false, data.Message);
                                }
                            }

                            //response(data);
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                },
                /*autoFocus: true,*/
                //prevent another value except dropdown value
                //change: function (event, ui) {
                //    if (ui.item === null) {
                //        $("#ProductName").val("");
                //        $("#ProductId").val("");
                //        $("#Quantiny").val("");
                //        $("#ProductName").focus();
                //    }
                //},
                focus: function () {
                    return false;
                },
                select: function (event, ui) {
                    var terms = split($(this).val());
                    terms.pop();
                    terms.push(ui.item.value);
                    terms.push("");
                    $(this).val(terms.join(", "));
                    return false;
                }
            });
        }

        function split(val) {
            return val.split(/,\s*/);
        }

        function extractLast(term) {
            return split(term).pop();
        }
    </script>
}
