@using Newtonsoft.Json;
@model IEnumerable<StockReceivingReportViewModel>
@{
    var pivotSetting = (List<FieldSettingModel>)ViewBag.PivotSetting;
    var search = (StockReceivingSearchViewModel)ViewBag.Search;
}

@Html.DevExpress().PivotGrid(settings =>
{
    settings.Name = "StockReceivingPivotGridP";
    settings.CallbackRouteValues = new { Controller = "StockReceivingReport", Action = "StockReceivingPivotGridPartial", jsonReq = JsonConvert.SerializeObject(search) };
    settings.Width = Unit.Percentage(90);
    settings.OptionsPager.RowsPerPage = 10;
    settings.OptionsPager.PageSizeItemSettings.Visible = true;
    settings.OptionsCustomization.AllowDrag = true;
    settings.OptionsCustomization.AllowDragInCustomizationForm = true;
    settings.OptionsCustomization.AllowSort = false;
    settings.OptionsBehavior.BestFitMode = PivotGridBestFitMode.None;
    settings.AfterPerformCallback = (sender, e) => // sau khi kéo thả field thì lưu lại layout
    {
        List<FieldSettingModel> fieldSettingList = new List<FieldSettingModel>();
        ASPxPivotGrid PivotGrid = sender as ASPxPivotGrid;
        var listField = PivotGrid.Fields;
        foreach (PivotGridField field in listField)
        {
            FieldSettingModel fieldSetting = new FieldSettingModel();
            fieldSetting.Caption = field.Caption;
            fieldSetting.AreaIndex = field.AreaIndex;
            fieldSetting.FieldName = field.FieldName;
            if (field.Area == PivotArea.RowArea)
            {
                fieldSetting.PivotArea = 0;

            }
            else
            {
                if (field.Area == PivotArea.ColumnArea)
                {
                    fieldSetting.PivotArea = 1;
                }
                else
                {
                    if (field.Area == PivotArea.FilterArea)
                    {
                        fieldSetting.PivotArea = 2;
                    }
                    else
                    {
                        fieldSetting.PivotArea = 3;
                    }
                }
            }
            if (field.ValueFormat.FormatType == FormatType.Numeric || field.ValueFormat.FormatType == FormatType.DateTime)
            {
                fieldSetting.CellFormat_FormatString = field.ValueFormat.FormatString;
                fieldSetting.CellFormat_FormatType = field.ValueFormat.FormatType.ToString();
            }
            fieldSetting.Visible = field.Visible;
            fieldSettingList.Add(fieldSetting);
        }
        Session[CurrentUser.AccountId + "Layout"] = fieldSettingList;

    };

    if (pivotSetting != null && pivotSetting.Count > 0) //nếu có setting thì  render theo setting
    {
        foreach (var fieldSetting in pivotSetting)
        {
            settings.Fields.Add(field =>
            {
                if (fieldSetting.PivotArea == 0)
                {
                    field.Area = PivotArea.RowArea;
                }
                if (fieldSetting.PivotArea == 1)
                {
                    field.Area = PivotArea.ColumnArea;
                }
                if (fieldSetting.PivotArea == 2)
                {
                    if (fieldSetting.AreaIndex > 10)
                    {
                        field.Visible = false;
                    }
                    field.Area = PivotArea.FilterArea;

                }
                if (fieldSetting.PivotArea == 3)
                {
                    field.Area = PivotArea.DataArea;
                }
                field.FieldName = fieldSetting.FieldName;
                field.Caption = fieldSetting.Caption;
                field.AreaIndex = fieldSetting.AreaIndex.Value;
                if (fieldSetting.CellFormat_FormatType == "DateTime")
                {
                    field.ValueFormat.FormatType = FormatType.DateTime;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.DateTime;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                }
                if (fieldSetting.CellFormat_FormatType == "Numeric")
                {
                    field.ValueFormat.FormatType = FormatType.Numeric;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.Numeric;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
                    field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                }
                field.Visible = fieldSetting.Visible.Value;
            });
        }
    }
    else // nếu không có template thì render mặc định
    {
        //Row Area

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "DocumentDate";
            field.Caption = "Ngày chứng từ";
            field.ValueFormat.FormatString = "dd-MM-yyyy";
            field.ValueFormat.FormatType = FormatType.DateTime;
            field.AreaIndex = 0;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "StockReceivingCode";
            field.Caption = "Mã phiếu nhập";
            field.AreaIndex = 1;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "ERPProductCode";
            field.Caption = "Mã Catalogue";
            field.AreaIndex = 2;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "ProductName";
            field.Caption = "Tên Catalogue";
            field.AreaIndex = 3;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "CategoryName";
            field.Caption = "Nhóm Vật Tư";
            field.AreaIndex = 4;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "StockCode";
            field.Caption = "Mã Kho Nhận";
            field.AreaIndex = 7;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "StockName";
            field.Caption = "Tên Kho nhận";
            field.AreaIndex = 8;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "SalesEmployeeName";
            field.Caption = "Nhân viên";
            field.AreaIndex = 9;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "DepartmentName";
            field.Caption = "Phòng ban";
            field.AreaIndex = 10;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "Note";
            field.Caption = "Ghi chú";
            field.AreaIndex = 11;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "Quantity";
            field.Caption = "Số lượng nhập";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:#,##0}";
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:#,##0}";
            field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
            field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            field.AreaIndex = 0;
        });

    }
}).Bind(Model).GetHtml()




