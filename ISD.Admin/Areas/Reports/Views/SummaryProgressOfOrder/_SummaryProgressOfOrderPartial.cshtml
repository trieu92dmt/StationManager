@using Newtonsoft.Json;
@model IEnumerable<SummaryProgressOfOrderViewModel>
@{
    var pivotSetting = (List<FieldSettingModel>)ViewBag.PivotSetting;
    var search = (SummaryProgressOfOrderSearchViewModel)ViewBag.Search;
}
@Html.DevExpress().PivotGrid(settings =>
{
    settings.Name = "CustomerTastesPivotGrid";
    settings.CallbackRouteValues = new { Controller = "SummaryProgressOfOrder", Action = "SummaryProgressOfOrderPartial", jsonReq = JsonConvert.SerializeObject(search) };
    settings.Width = Unit.Percentage(90);
    settings.OptionsPager.RowsPerPage = 20;
    settings.OptionsPager.PageSizeItemSettings.Visible = true;
    settings.OptionsCustomization.AllowDrag = true;
    settings.OptionsCustomization.AllowDragInCustomizationForm = true;
    settings.CustomizationFieldsLeft = 600;
    settings.CustomizationFieldsTop = 400;
    settings.OptionsCustomization.AllowSort = false;
    settings.AfterPerformCallback = (sender, e) =>
    {
        List<FieldSettingModel> fieldSettingList = new List<FieldSettingModel>();
        ASPxPivotGrid PivotGrid = sender as ASPxPivotGrid;
        var listField = PivotGrid.Fields;
        foreach (PivotGridField field in listField)
        {
            FieldSettingModel fieldSetting = new FieldSettingModel();
            fieldSetting.Caption = field.Caption;
            fieldSetting.AreaIndex = field.AreaIndex;
            fieldSetting.FieldName = field.FieldName;
            if (field.Area == PivotArea.RowArea)
            {
                fieldSetting.PivotArea = 0;

            }
            else
            {
                if (field.Area == PivotArea.ColumnArea)
                {
                    fieldSetting.PivotArea = 1;
                }
                else
                {
                    if (field.Area == PivotArea.FilterArea)
                    {
                        fieldSetting.PivotArea = 2;
                    }
                    else
                    {
                        fieldSetting.PivotArea = 3;
                    }
                }
            }
            if (field.ValueFormat.FormatType == FormatType.Numeric || field.ValueFormat.FormatType == FormatType.DateTime)
            {
                fieldSetting.CellFormat_FormatString = field.ValueFormat.FormatString;
                fieldSetting.CellFormat_FormatType = field.ValueFormat.FormatType.ToString();
            }
            fieldSetting.Visible = field.Visible;
            fieldSettingList.Add(fieldSetting);
        }
        Session[CurrentUser.AccountId + "Layout"] = fieldSettingList;

    };

    if (pivotSetting != null && pivotSetting.Count > 0)
    {
        foreach (var fieldSetting in pivotSetting)
        {
            settings.Fields.Add(field =>
            {
                if (fieldSetting.PivotArea == 0)
                {
                    field.Area = PivotArea.RowArea;
                }
                if (fieldSetting.PivotArea == 1)
                {
                    field.Area = PivotArea.ColumnArea;
                }
                if (fieldSetting.PivotArea == 2)
                {
                    if (fieldSetting.AreaIndex > 10)
                    {
                        field.Visible = false;
                    }
                    field.Area = PivotArea.FilterArea;
                }
                if (fieldSetting.PivotArea == 3)
                {
                    field.Area = PivotArea.DataArea;
                }
                field.FieldName = fieldSetting.FieldName;
                field.Caption = fieldSetting.Caption;
                field.AreaIndex = fieldSetting.AreaIndex.Value;
                if (fieldSetting.CellFormat_FormatType == "DateTime")
                {
                    field.ValueFormat.FormatType = FormatType.DateTime;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.DateTime;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                }
                if (fieldSetting.CellFormat_FormatType == "Numeric")
                {
                    field.ValueFormat.FormatType = FormatType.Numeric;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.Numeric;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                    field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
                }
                field.Visible = fieldSetting.Visible.Value;
            });
        }
    }
    else // default
    {

        //Row Area

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "LSX";
            field.Caption = "Lệnh Sản Xuất";
            field.AreaIndex = 1;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "NgayHT";
            field.Caption = "Ngày Hoàn Thành Theo Kế Hoạch";
            field.AreaIndex = 2;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "KLTLSX";
            field.Caption = "Khối Lượng Tính Theo Lệnh Sản Xuất";
            field.AreaIndex = 3;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "KLTVLSX";
            field.Caption = "KL Thô Ván Theo LSX";
            field.AreaIndex = 4;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "VANNL_HT";
            field.Caption = "Khối Lượng Hoàn Thiên Ván NL(m3 thô)";
            field.AreaIndex = 5;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "SOCHE_HT";
            field.Caption = "Khối Lượng Hoàn Thiên  Sơ Chế";
            field.AreaIndex = 6;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "RAP_HT";
            field.Caption = "Khối Lượng Hoàn Thiên  Ráp";
            field.AreaIndex = 7;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "HT_HT";
            field.Caption = "Khối Lượng Hoàn Thiên  Hoàn Thiện";
            field.AreaIndex = 8;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "VANNL_T";
            field.Caption = "Khối Lượng Thiếu Ván NL(m3 thô)";
            field.AreaIndex = 9;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "SOCHE_T";
            field.Caption = "Khối Lượng Thiếu Sơ Chế";
            field.AreaIndex = 10;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "RAP_T";
            field.Caption = "Khối Lượng Thiếu Ráp";
            field.AreaIndex = 11;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "HT_T";
            field.Caption = "Khối Lượng Thiếu Hoàn Thiện";
            field.AreaIndex = 11;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "PT_VANNL";
            field.Caption = "Phần Trăm Hoàn Thành Ván NL(m3 thô)";
            field.AreaIndex = 11;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "PT_SOCHE";
            field.Caption = "Phần Trăm Hoàn Thành Sơ Chế";
            field.AreaIndex = 11;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "PT_RAP";
            field.Caption = "Phần Trăm Hoàn Thành Ráp";
            field.AreaIndex = 11;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "PT_HT";
            field.Caption = "Phần Trăm Hoàn Thành Hoàn Thiện";
            field.AreaIndex = 11;

        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "Ghi Chú";
            field.Caption = "Ghi Chú";
            field.AreaIndex = 11;

        });

    }

}).Bind(Model).GetHtml()