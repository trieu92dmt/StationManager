@model OpportunityReportSearchViewModel
@{
    Layout = "~/Views/Shared/_Layout_Report.cshtml";
    ViewBag.Title = LanguageResource.Reports_OpportunityReport;
    string CurrentArea = ConstArea.Reports;
    string CurrentController = ConstController.OpportunityReport;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    var listSystemTemplate = (List<PivotTemplateViewModel>)ViewBag.SystemTemplate;
    var listUserTemplate = (List<PivotTemplateViewModel>)ViewBag.UserTemplate;
    var templateId = ViewBag.TemplateId;
    var modeSearch = ViewBag.ModeSearch;
    ViewBag.CurrentUrl = CurrentUrl;
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">

    </div>
</div>
@Html.Hidden("TemplateId", null, new { value = templateId })
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="row" style="padding-top:10px;">
                    <div class="col-sm-12">
                        <div class="box box-default box-solid">
                            <div class="box-header with-border">
                                <div class="box-tools pull-right">
                                    <button class="btn btn-box-tool" type="button" data-widget="collapse"><i class="fa fa-minus"></i></button>
                                </div>
                            </div>
                            <div class="box-body ">
                                <div class="row">

                                    <div class="panel-body">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                                        {
                                            <div id="frm-product" class="panel-body">
                                                <div class="row">
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.Investor)
                                                            </div>
                                                            <div class="col-md-8 position-relative dropdown-absolute pl-0">
                                                                <div class="input-group">
                                                                    @Html.HiddenFor(p => p.Investor)
                                                                    @Html.RequiredTextboxFor(p => p.InvestorName, new { @class = " form-control text-box single-line", @readonly = "readonly" })
                                                                    <a class="input-group-addon btn btn-danger btn-del-profile" data-field="Investor">
                                                                        <i class="fa fa-close"></i>
                                                                    </a>
                                                                    <a class="input-group-addon btn btn-default btn-get-profile" data-toggle="modal" data-field="Investor">
                                                                        <i class="fa fa-ellipsis-h"></i>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.Designer)
                                                            </div>
                                                            <div class="col-md-8 position-relative dropdown-absolute pl-0">
                                                                <div class="input-group">
                                                                    @Html.HiddenFor(p => p.Designer)
                                                                    @Html.RequiredTextboxFor(p => p.DesignerName, new { @class = " form-control text-box single-line", @readonly = "readonly" })
                                                                    <a class="input-group-addon btn btn-danger btn-del-profile" data-field="Designer">
                                                                        <i class="fa fa-close"></i>
                                                                    </a>
                                                                    <a class="input-group-addon btn btn-default btn-get-profile" data-toggle="modal" data-field="Designer">
                                                                        <i class="fa fa-ellipsis-h"></i>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.SaleOfficeCode)
                                                            </div>
                                                            <div class="col-md-8 pl-0">
                                                                @Html.DropDownList("SaleOfficeCode", null, LanguageResource.Dropdownlist_All, new { @class = " form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div id="frm-button" class="col-md-12">
                                                    <div class="form-group">
                                                        <div class="col-md-6 col-md-offset-3 input-group">

                                                            <select id="SearchTemplateId" name="SearchTemplateId">
                                                                <option value="">@LanguageResource.Dropdownlist_RecentSearch</option>
                                                            </select>
                                                            <span class="input-group-btn" style="padding-right:25px;padding-left: 10px;">
                                                                <a href="#" class="btn btn-delete-frmSearch display-none" style="color: coral;" title="Xoá mẫu tìm kiếm"><i class="fa fa-trash-o fa-lg" aria-hidden="true"></i></a>
                                                                <a href="#" class="btn btn-save-frmSearch" title="Lưu mẫu tìm kiếm"><i class="fa fa-thumb-tack fa-lg" aria-hidden="true"></i></a>
                                                            </span>
                                                            <a href="#" id="btn-view" class="btn btn-primary" style="margin-left: 10px;"><i class="fa fa-refresh"></i> Chạy báo cáo</a>&nbsp;
                                                            <a href="#" class="btn btn-success" id="btn-export"><i class="fa fa-download"></i> Export</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="dropdown pull-right" style="padding-top:5px; padding-right: 5px;">
                    @Html.Partial("~/Areas/Reports/Views/_PivotTemplateHandle.cshtml")
                </div>
                <div class="panel-body" style="overflow-x:scroll;">

                    @Html.Action("OpportunityPivotGridPartial", new { searchViewModel = ViewBag.Search, templateId = ViewBag.TemplateId })
                </div>
            </div>
        </div>
    </div>
</div>

<div class="delete-confirm"></div>
@section components {
    <div id="popupSaveTemplate" class="modal fade" role="dialog">
        @Html.Partial("~/Areas/Reports/Views/_SaveTemplatePopup.cshtml")
    </div>
    <div class="divProfilePopup"></div>
}
@section jquery {
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Content/jquery-ui.js"></script>
}

@section scripts {
    <script src="~/Scripts/Common/ISD.SearchTemplate.js"></script>
    <script src="~/Scripts/Common/PivotTemplate.js"></script>
    <script>
	//Define it
	var currentUserId = "@CurrentUser.AccountId";
	var currentPageId = "@ViewBag.PageId";
    </script>
    <script>
        $(document).ready(function () {
             var modeTemplateSearch = "@modeSearch";

            if (modeTemplateSearch == "Recently") {
                LoadTemplateSearch(currentUserId, currentPageId, "Recently");
                var recentSearch = JSON.parse(localStorage.getItem('pageId-' + currentPageId));
                if (recentSearch) {
                    FillToInput(recentSearch);
                }
            }
            else {
                LoadTemplateSearch(currentUserId, currentPageId);
                localStorage.removeItem('pageId-' + currentPageId)
            }
            ISDPivotTemplate.Init("@CurrentUrl","@CurrentController");
        })
        var currentIndex = 1;
        $(document).on("click", "#btn-export", function () {
            var $btn = $(this);
            var arr = {};
            var data = $("#frmSearch").serializeArray();
            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["TemplateId"] = $('#TemplateId').val();
            $.extend(true, arr, obj);
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
           // ExportPivotGrid(arr);
            ISD.Download("/@CurrentUrl/ExportPivot", arr);
            $btn.button("reset");
        });

         $(document).on("click", "#btn-view", function () {
             var $btn = $(this);
             $btn.button("loading")
             var arr = {};
             var data = $("#frmSearch").serializeArray();

             var obj = {};
             $.each(data, function (index, val) {
                 obj[val.name] = val.value;
                 $.extend(true, arr, obj)
             });
             obj["IsView"] = true;
             $.extend(true, arr, obj);
             obj["pivotTemplate"] = $('#TemplateId').val();
             obj["modeSearch"] = "Recently";
             $.extend(true, arr, obj);
             //Save localStorage
             localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
             ISD.Download("/@CurrentUrl/ViewDetail", arr);
        });
        $(document).off("click", ".pivot-template-item").on("click", ".pivot-template-item", function () {
            var $btn = $(this);
             var arr = {};
             var data = $("#frmSearch").serializeArray();

             var obj = {};
             $.each(data, function (index, val) {
                 obj[val.name] = val.value;
                 $.extend(true, arr, obj)
             });
            obj["IsView"] = true;
            obj["modeSearch"] = "Recently";
            $.extend(true, arr, obj);
            var templateId = $(this).data('id');
            obj["pivotTemplate"] = templateId;
            $.extend(true, arr, obj);
             localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ChangeTemplate", arr);
        });

        $(document).on("click", ".btn-get-profile", function () {
            var field = $(this).data("field");
            $.ajax({
                type: "POST",
                url: '/Work/Task/_ProfileSearch',
                data: {
                    hasNoContact: true,
                    ProfileType: 'Account'
                },
                success: function (html) {
                    $(".divProfilePopup").html("");

                    $(".divProfilePopup").html(html);
                    $(".divProfilePopup input[id='SearchProfileId']").val("");
                    $(".with-search").select2();

                    $(".divProfilePopup #divProfileSearch #ProfileField").val(field);
                    $(".divProfilePopup #divProfileSearch").modal("show");
                }
            });
        });

        $(document).on("click", ".btn-del-profile", function () {
            var field = $(this).data("field");
            if (field === "Investor") {
                $("input[name='Investor']").val("");
                $("input[name='InvestorName']").val("");
            }
            else if (field === "Designer") {
                $("input[name='Designer']").val("");
                $("input[name='DesignerName']").val("");
            }
        });

    </script>
    <script>
        //Get data of form search name function is required
        function GetDataFormSearch() {
            //Get value in search form
            var formdata = $("#frmSearch").serializeArray();
            var data = {};
            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });
            return JSON.stringify(data);
        }
        //Fill data to form search name function is required
        function FillToInputSpecial(recentSearch) {
            if (recentSearch.SearchProfileId != "") {
                $("#SearchProfileCode").val(recentSearch.SearchProfileCodeRecent);
                $("#SearchProfileName").val(recentSearch.SearchProfileNameRecent);
                $("#SearchProfileCode").prop("disabled", true);
            }
            if (recentSearch.SearchProductId != "") {
                $("#ProductCode").val(recentSearch.SearchProductCodeRecent);
                $("#ProductName").val(recentSearch.SearchProductNameRecent);
                $("#ProductCode").prop("disabled", true);
            }
        }
    </script>

}
